{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/AboutScreen.tsx","screens/NotFoundScreen.tsx","screens/Themes.tsx","data/part-categories.ts","data/parts.ts","data/color-order.ts","data/colors.ts","data/elements.ts","screens/Parts.tsx","components/ScaledImage.tsx","screens/Sets.tsx","data/inventory-parts.ts","components/Inventory.tsx","screens/Set.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","TextInput","backgroundColor","flex","flexDirection","flexGrow","position","paddingTop","label","top","left","zIndex","paddingHorizontal","fontSize","borderWidth","borderColor","borderRadius","padding","View","Picker","borderStyle","dropdownIconColor","Item","DefaultPicker","Paginator","numPages","Math","ceil","numItems","pageSize","pickerItems","i","push","key","toString","value","justifyContent","alignItems","prompt","selectedValue","onValueChange","num","onPageChange","onPageSizeChange","marginRight","TouchableOpacity","height","onPress","Icon","name","marginLeft","FontAwesome","size","AboutScreen","navigation","styles","container","paragraph","version","linkText","Linking","openURL","Button","title","StyleSheet","create","marginBottom","textAlign","NotFoundScreen","replace","link","fontWeight","marginTop","paddingVertical","TabsScreen","ScrollView","themes","filter","parentId","sort","sortBy","map","id","numSets","partCategoriesListUnsorted","partCategories","categoriesData","reduce","acc","categoryData","partCategoriesList","sizeRegex","getSubCategory","partCatId","match","parts","partsData","partData","width","parseInt","padStart","length","heightParsed","isNaN","partNum","nameSort","category","subCategory","colors","partsList","Object","keys","getPart","partMaterial","colorsData","colorData","colorIndex","colorOrder","indexOf","isTrans","sortOrder","Number","POSITIVE_INFINITY","colorsList","partColors","elements","elementsData","p","c","part","element","getElementByPartAndColor","colorId","corrections","useState","setSortOrder","partCategory","setPartCategory","colorFilter","setColorFilter","showPrints","setShowPrints","setPageSize","currentPage","setCurrentPage","filterBy","setFilterBy","scrollRef","useRef","filteredPartNumbers","toLowerCase","find","defaultColorId","ref","paddingBottom","onChangeText","paddingRight","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","apply","split","slice","defaultColor","Image","source","uri","val","current","scrollTo","y","animated","image","ScaledImage","setImageWidth","setImageHeight","useEffect","DefaultImage","getSize","w","h","newWidth","min","maxWidth","newHeight","maxHeight","navigate","sortField","setSortField","filteredSets","sets","setNum","field","set","numParts","toLocaleString","year","nowrapRow","flexWrap","data","inventoryPartData","quantity","q","isSpare","s","Inventory","defaultSortOrder","showSpareParts","setShowSpareParts","setInventoryParts","inventoryParts","SetScreen","getState","routes","index","viewWidth","setViewWidth","params","setOptions","onLayout","nativeEvent","layout","themeId","inventories","inventory","linking","prefixes","config","screens","Root","path","Parts","Themes","Sets","About","Set","Modal","NotFound","Stack","createNativeStackNavigator","Drawer","createDrawerNavigator","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","documentTitle","formatter","options","route","DarkTheme","DefaultTheme","Navigator","Screen","component","DrawerNav","headerShown","MenuButton","console","log","Pressable","toggleDrawer","opacity","pressed","MaterialIcons","DrawerContent","DrawerContentScrollView","DrawerItemList","DrawerItem","icon","AntDesign","initialRouteName","drawerContent","SetsScreen","drawerIcon","headerLeft","ThemesScreen","PartsScreen","MaterialCommunityIcons","App","isLoadingComplete","React","setLoadingComplete","a","async","SplashScreen","Font","font","require","warn","useCachedResources","StatusBar","module","exports"],"mappings":"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,SAAS,GAAKhD,EAAK,GAAKA,EAAK,IAAM,EACzFiD,EAASjD,EAAO+C,SAAU/C,EAAK,GAAGgD,SAAS,GAAKhD,EAAK,GAAGgD,SAAS,GAAKhD,EAAK,GAAKA,EAAK,IAAO,EAC5FkD,EAAeH,SAAS/C,EAAOA,EAAK,GAAK,IACzCN,EAASyD,MAAMD,GAAgB,EAAIA,EAavC,OAZAd,EAAIS,EAASO,SAAb,SACKP,GADL,IAEEQ,SAAUR,EAAShD,KACNoB,QAAQsB,GAAW,MACnBtB,QAAQ,WAAY,IACjC6B,QACAG,SACAvD,SACA4D,UDnG0BxB,ECmGAe,EAASJ,UDlGvCR,GAAeH,IAAO,CACpBA,GAAI,KACJjC,KAAM,YCiGJ0D,YAAaf,GAAeK,GAC5BW,OAAQ,KAEHpB,IAET,IAGWqB,GAAYC,OAAOC,KAAKhB,IAAOd,KAAI,SAAAuB,GAAO,OAAIT,GAAMS,MAIpDQ,GAAU,SAACR,GAAD,OACrBT,GAAMS,IAAY,CAChBA,QAAS,KACTvD,KAAM,eACN4C,UAAW,GACXoB,aAAc,GACdR,SAAU,GACVP,MAAO,EACPG,OAAQ,EACRvD,OAAQ,EACR4D,SAAU,GACVC,YAAa,GACbC,OAAQ,K,oBCpJG,IACb,QACA,eACA,uBACA,YACA,mBACA,oBACA,aACA,QACA,QACA,MACA,WACA,oBACA,aACA,gBACA,MACA,SACA,eACA,aACA,SACA,eACA,cACA,OACA,QACA,aACA,kBACA,iBACA,aACA,aACA,OACA,SACA,OACA,YACA,SACA,eACA,cACA,sBACA,cACA,YACA,oBACA,oBACA,eACA,mBACA,qBACA,cACA,qBACA,mBACA,kBACA,kBACA,eAEA,sBACA,mBACA,UACA,cACA,kBACA,WACA,uBACA,cACA,eACA,cACA,oBACA,eACA,cACA,eACA,uBACA,wBACA,aACA,cACA,cACA,kBACA,iBACA,gBACA,cACA,aACA,aACA,QACA,eACA,SACA,cACA,0BACA,cACA,sBACA,OACA,aACA,eACA,uBACA,qBACA,SACA,mBACA,aACA,mBACA,oBACA,kBACA,wBACA,yBACA,kBACA,iBACA,cACA,eACA,cACA,sBACA,oBACA,OACA,sBACA,aACA,WACA,qBACA,YACA,aACA,qBACA,cACA,WACA,eACA,aACA,cACA,cACA,WACA,mBACA,eACA,cACA,YACA,gBACA,iBACA,gBACA,cACA,kBACA,qBACA,gBACA,2BACA,2BACA,+BACA,oBACA,yBACA,gBACA,eACA,gBACA,cACA,iBACA,kBACA,gBACA,4BACA,qBACA,wBACA,oBACA,gBACA,qBACA,qBACA,gBACA,eACA,cACA,mBACA,iBACA,uBACA,uBACA,uBACA,gBACA,uBACA,sBACA,qBACA,oBACA,oBACA,sBACA,sBACA,iBACA,eACA,gBACA,yBACA,0BACA,0BACA,2BACA,yBACA,0BACA,sBACA,mBACA,sBACA,sBACA,QACA,cACA,uBACA,kBACA,mCACA,mBACA,mBACA,2BACA,oBACA,oBACA,mBACA,uBACA,QACA,wB,qkBC7KF,IAAMA,GAAUM,GACb3B,QAAO,SAACC,EAA6B2B,GACpC,IAAMC,EAAaC,GAAWC,QAAQH,EAAUlE,MAChD,OAAO,IAAcuC,EAAd,OAAqB2B,EAAUjC,GAA/B,SAEAiC,GAFA,IAGHI,QAA8B,KAArBJ,EAAUI,QACnBC,UAAWJ,GAAc,EAAIA,EAAaK,OAAOC,wBAIvD,IAGad,MAEFe,GAAab,OAAOC,KAAKH,IACnC3B,KAAI,SAAAC,GAAE,OAAI0B,GAAO1B,MACjBH,KAAKC,KAAO,SCnBT4C,GAA2D,GAEpDC,GAAYC,GAA+BvC,QAAO,SAACC,EAAD,GAAqB,IAAdzD,EAAa,EAAbA,EAAGgG,EAAU,EAAVA,EAAGC,EAAO,EAAPA,EACpEC,EAAOjB,GAAQe,GACf/H,EAAQ4G,GAAOoB,GACrBC,EAAKrB,OAAO5E,KAAKhC,GACjB,IAAMkI,EAAU,CACdhD,GAAInD,EACJkG,OACAjI,SAKF,OAHAwF,EAAIzD,GAAKmG,EACTN,GAAWG,GAAKH,GAAWG,IAAM,GACjCH,GAAWG,GAAGC,GAAKE,EACZ1C,IACN,IAEU2C,GAA2B,SAAC3B,EAAiB4B,GAAlB,OACrCC,GAAY7B,IAAY6B,GAAY7B,GAAS4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","file":"static/js/app.30f7d8c4.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport React from 'react';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Text as DefaultText, TouchableOpacity, View as DefaultView, TextInput as DefaultTextInput } from 'react-native';\nimport {Picker as DefaultPicker, PickerProps} from '@react-native-picker/picker'\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\ntype DefaultTextInputProps = React.ComponentProps<typeof DefaultTextInput>\ninterface TextInputProps extends DefaultTextInputProps {\n  label?: string;\n}\n\nexport function TextInput(props: TextInputProps ) {\n  const { style, ...otherProps } = props;\n  const backgroundColor = useThemeColor({}, 'background');\n  const color = useThemeColor({}, 'text')\n\n  return <View style={[{\n    flex: 1,\n    flexDirection: 'row',\n    flexGrow: 1,\n    position: 'relative',\n    paddingTop: 8\n  }, props.style]}>\n    {props.label && <Text style={{\n        position: 'absolute',\n        top: 0,\n        left: 6,\n        zIndex: 100,\n        paddingHorizontal: 4,\n        backgroundColor,\n        fontSize: 12\n      }}>\n        {props.label}\n      </Text>\n    }\n    <DefaultTextInput style={[{\n      backgroundColor,\n      borderWidth: 1,\n      borderColor: color,\n      borderRadius: 4,\n      color,\n      padding: 10,\n      flexGrow: 1\n    }, style]} {...otherProps} />\n  </View>\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n\nexport function Picker(props: PickerProps) {\n  const { style, ...otherProps } = props;\n  const backgroundColor = useThemeColor({}, 'background');\n  const color = useThemeColor({}, 'text');\n\n  return <View style={[{\n    flex: 1,\n    flexDirection: 'row',\n    flexGrow: 1,\n    position: 'relative'\n  }, props.style]}>\n    <View style={{\n      borderColor: color,\n      borderWidth: 1,\n      borderRadius: 4,\n      flexGrow: 1,\n      flexDirection: 'row'\n    }}>\n      {props.label && <Text style={{\n        position: 'absolute',\n        top: -8,\n        left: 4,\n        zIndex: 100,\n        paddingHorizontal: 4,\n        backgroundColor,\n        fontSize: 12\n      }}>\n        {props.label}\n      </Text>}\n      <DefaultPicker\n        style={{\n          color,\n          flexGrow: 1,\n          borderStyle: 'none',\n          backgroundColor,\n          padding: 10\n        }} {...otherProps}\n        dropdownIconColor={color} />\n    </View>\n  </View>\n}\n\nPicker.Item = DefaultPicker.Item\n\ntype PaginatorProps = {\n  selectedValue: number,\n  onPageChange: Function,\n  onPageSizeChange: Function,\n  numItems: number,\n  pageSize: number\n}\n\nexport const Paginator = (props: PaginatorProps) => {\n  const numPages = Math.ceil(props.numItems/props.pageSize),\n        pickerItems = []\n  for(let i = 0; i < numPages; i++)\n    pickerItems.push(\n      <Picker.Item key={i} label={(i + 1).toString()} value={i} />\n    )\n  return <View style={{\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexGrow: 1\n  }}>\n    <Picker\n      prompt=\"Show\"\n      label=\"Show\"\n      selectedValue={props.pageSize}\n      onValueChange={(num: number) => {\n        props.onPageChange(0)\n        props.onPageSizeChange(num)\n      }}\n      style={{marginRight: props.selectedValue == 0 ? 0 : 20}}>\n      <Picker.Item label=\"10 per page\" value={10} />\n      <Picker.Item label=\"25 per page\" value={25} />\n      <Picker.Item label=\"50 per page\" value={50} />\n      <Picker.Item label=\"100 per page\" value={100} />\n    </Picker>\n    {numPages > 1\n      ? <>\n        <TouchableOpacity\n          style={{height: props.selectedValue == 0 ? 0 : 'auto'}}\n          onPress={() =>\n            props.onPageChange(props.selectedValue == 0 ? 0 : props.selectedValue - 1)\n          }>\n          <Icon name=\"chevron-left\" style={{marginRight: 20}} />\n        </TouchableOpacity>\n        <Picker\n          selectedValue={props.selectedValue}\n          onValueChange={props.onPageChange}\n          label=\"Current Page\">\n          {pickerItems}\n        </Picker>\n        <TouchableOpacity\n          style={{height: props.selectedValue == numPages - 1 ? 0 : 'auto'}}\n          onPress={() =>\n            props.onPageChange(props.selectedValue + 1)\n          }>\n          <Icon name=\"chevron-right\" style={{marginLeft: 20}} />\n        </TouchableOpacity>\n      </>\n      : null\n    }\n  </View>\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nexport function Icon(props: any) {\n  const color = useThemeColor({}, 'text')\n  return <FontAwesome size={30}  {...props} style={{ color, ...props.style }}/>;\n}\n","import * as React from 'react';\nimport { StyleSheet, Linking, Button } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport {version} from '../package.json'\n\nimport { RootStackScreenProps } from '../types';\n\nexport default function AboutScreen({ navigation }: RootStackScreenProps<'About'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.paragraph}>Version {version}</Text>\n      <Text style={styles.paragraph}>\n        This project is free, open source, and maintained by volunteers out of a love of all things LEGO®. If you would like to get involved, please check out the{' '}\n        <Text style={styles.linkText}\n              onPress={() => Linking.openURL('https://github.com/JeromeDane/brick-tools-for-lego/')}>\n          project on GitHub\n        </Text>.\n      </Text>\n      <Text style={styles.paragraph}>\n        Show your ❤️ and support for this project and help keep it alive:\n      </Text>\n      <View style={styles.paragraph}>\n        <Button\n          title=\"Make a donation\"\n          onPress={() => Linking.openURL('https://www.paypal.com/donate?hosted_button_id=LWSCPL34NZ6LJ')} />\n      </View>\n      <Text style={styles.paragraph}>\n        Author:{' '}\n        <Text style={styles.linkText}\n              onPress={() => Linking.openURL('https://www.linkedin.com/in/JeromeDane/')}>\n          Jerome Dane\n        </Text>\n      </Text>\n      <Text style={styles.paragraph}>\n        Powered by data from{' '}\n        <Text style={styles.linkText}\n              onPress={() => Linking.openURL('https://rebrickable.com/downloads/')}>\n          Rebrickable.com\n        </Text>\n      </Text>\n      <Text style={styles.paragraph}>LEGO® is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this project.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  linkText: {\n    color: '#2e78b7',\n  },\n  paragraph: {\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { Text, View } from '../components/Themed';\n\nimport { RootStackScreenProps } from '../types';\n\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { useEffect, useState } from 'react'\nimport { ScrollView, StyleSheet, ViewPropTypes } from 'react-native'\nimport sortBy from 'sort-by'\nimport { Text, View } from '../components/Themed'\nimport { RootTabScreenProps } from '../types'\nimport themes from '../data/raw/themes.json'\n\nexport default function TabsScreen({ navigation }: RootTabScreenProps<'Themes'>) {\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        {themes\n          .filter(({parentId}) => !parentId)\n          .sort(sortBy('name'))\n          .map(theme =>\n            <Text key={theme.id} style={styles.theme}>\n              {theme.name} ({theme.numSets} sets)\n            </Text>\n          )\n        }\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    padding: 20\n  },\n  theme: {\n    textAlign: 'left',\n    paddingVertical: 10\n  },\n})\n","import sortBy from 'sort-by'\nimport categoriesData from './raw/part_categories.json'\n\ntype PartCategoryData = {\n  id: string,\n  name: string\n}\n\nexport type PartCategory = {\n  id: string,\n  name: string\n}\n\nconst partCategoriesListUnsorted : PartCategory[] = []\n\nconst partCategories : {[key:string]: PartCategory} = (categoriesData as PartCategoryData[])\n  .reduce((acc: {[key: string]: PartCategory}, categoryData: PartCategoryData) => {\n    acc[categoryData.id] = categoryData as PartCategory\n    partCategoriesListUnsorted.push(acc[categoryData.id])\n    return acc\n  }, {})\n\nexport default partCategories\n\nexport const partCategoriesList = partCategoriesListUnsorted.sort(sortBy('name'))\n\nexport const getPartCategory = (id: string) =>\n  partCategories[id] || {\n    id: '-1',\n    name: 'unknown'\n  }","import partsData from './raw/parts.json'\nimport type {Color} from './colors'\nimport type {PartCategory} from './part-categories'\nimport {getPartCategory} from './part-categories'\n\ntype PartData = {\n  partNum: string,\n  name: string,\n  partCatId: string,\n  partMaterial: string\n}\n\nexport interface Part extends PartData {\n  nameSort: string,\n  width: number,\n  length: number,\n  height: number,\n  category: PartCategory,\n  subCategory: string,\n  colors: Color[]\n}\n\nconst sizeRegex = /(\\d+)\\s?x\\s?(\\d+)(\\s?x\\s?(\\d+)([^\\/]|$))?/\n\nconst getSubCategory = ({name, partCatId} : PartData) : string => {\n  switch(partCatId) {\n    case '32': // Bars, Ladders, and Fences\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Eye/i)) return 'Eye'\n      if(name.match(/Fence/i)) return 'Fence'\n      if(name.match(/Lever/i)) return 'Lever'\n      if(name.match(/Stair/i)) return 'Stair'\n      if(name.match(/Stop\\sRing/i)) return 'Stop Ring'\n      break;\n    case '37': // Bricks Curved\n      if(name.match(/Arch/i)) return 'Arch'\n      break;\n    case '20': // Bricks Round and Cones\n      if(name.match(/Cone/i)) return 'Cone'\n      if(name.match(/Dome/i)) return 'Dome'\n      break;\n    case '3': // Bricks Sloped\n      if(name.match(/Inverted/i)) return 'Inverted'\n      if(name.match(/Slots/i)) return 'Slots'\n      break\n    case '5': // \"Bricks Special\n      if(name.match(/Bar|Handle/i)) return 'Bar'\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Headlight/i)) return 'Headlight'\n      if(name.match(/Masonry/i)) return 'Masonry'\n      if(name.match(/Pins/i)) return 'Pins'\n      if(name.match(/Studs.+(1|one)\\sSide/i)) return 'SNOT'\n      if(name.match(/Studs.+(2|two)\\sSide/i)) return 'SNOT, 2 sided'\n      if(name.match(/Studs.+(3|three)\\sSide/i)) return 'SNOT, 3 sided'\n      if(name.match(/Studs.+(4|four)\\sSide/i)) return 'SNOT, 4 sided'\n      break\n    case '7': // Containers\n      if(name.match(/Cupboard/i)) return 'Cupboard'\n      if(name.match(/Drawer/i)) return 'Drawer'\n      break\n    case '27': // Minifig Accessories\n      if(name.match(/Cup/i)) return 'Cup'\n      if(name.match(/Flame/i)) return 'Flame'\n      if(name.match(/Footwear/i)) return 'Footwear'\n      if(name.match(/Gun/i)) return 'Gun'\n      if(name.match(/Pan/i)) return 'Pan'\n       break;\n    case '14': // Plates\n      if(name.match(/Corner/i)) return 'Corner'\n      break\n    case '9': // Plates Special\n      if(name.match(/Bar|Handle/i)) return 'Bar'\n      if(name.match(/Bracket.+Inverted/i)) return 'Bracket Inverted'\n      if(name.match(/Bracket.+Pin.+Bottom/i)) return 'Bracket Pin Bottom'\n      if(name.match(/Bracket.+Vertical.+Studs/i)) return 'Bracket Vertical Studs'\n      if(name.match(/Bracket/i)) return 'Bracket'\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Jumper/i) && name.match(/Round/i)) return 'Jumper Round'\n      if(name.match(/Jumper/i)) return 'Jumper'\n      if(name.match(/pin\\sHole\\s(on\\s)Top/i)) return 'Pin Hole Top'\n      if(name.match(/Pin\\sHole/i)) return 'Pin Hole'\n      if(name.match(/Rail/i)) return 'Rail'\n      if(name.match(/Tooth/i)) return 'Tooth'\n      break\n    case '21': // Plates Round Curved and Dishes\n      if(name.match(/Axle\\sHole/i)) return 'Axle Hole'\n      if(name.match(/Boat\\sStud/i)) return 'Boat Stud'\n      if(name.match(/Radar/i)) return 'Radar'\n      break\n    case '31': // String, Bands and Reels\n      if(name.match(/Chain/i)) return 'Chain'\n      if(name.match(/String.+Studs.+Grip/i)) return 'Studded String with Grips'\n      break\n    case '15': // Tiles Special\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Grille/i)) return 'Grille'\n      if(name.match(/Gold\\sBar/i)) return 'Gold Bar'\n      if(name.match(/Inverted/i)) return 'Inverted' // must go before hole\n      if(name.match(/Hole/i)) return 'Hole'\n      if(name.match(/Hollow\\sBar/i)) return 'Hollow Bar'\n      break\n    case '67': // Tiles Round and Curved\n      if(name.match(/Half\\sCircle/i)) return 'Half Circle'\n      if(name.match(/Macaroni/i)) return 'Macaroni'\n      if(name.match(/Quarter/i)) return 'Quarter'\n      break\n  }\n  return ''\n}\n\nconst parts = (partsData as PartData[]).reduce(\n  (acc: {[key: string]: Part}, partData: PartData) => {\n    const size = partData.name.match(sizeRegex),\n        width = size ? parseInt(size[1].padStart(2) < size[2].padStart(2) ? size[1] : size[2]) : 0,\n        length = size ? parseInt((size[1].padStart(2) > size[2].padStart(2) ? size[1] : size[2])) : 0,\n        heightParsed = parseInt(size ? size[4] : ''),\n        height = isNaN(heightParsed) ? 0 : heightParsed\n    acc[partData.partNum] = {\n      ...partData,\n      nameSort: partData.name\n                  .replace(sizeRegex, '  ')\n                  .replace(/with|w\\//, ''),\n      width,\n      length,\n      height,\n      category: getPartCategory(partData.partCatId),\n      subCategory: getSubCategory(partData),\n      colors: []\n    } as Part\n    return acc\n  },\n  {}\n)\n\nexport const partsList = Object.keys(parts).map(partNum => parts[partNum])\n\nexport default parts\n\nexport const getPart = (partNum: string) =>\n  parts[partNum] || {\n    partNum: '-1',\n    name: 'unknown part',\n    partCatId: '',\n    partMaterial: '',\n    nameSort: '',\n    width: 0,\n    length: 0,\n    height: 0,\n    category: {},\n    subCategory: '',\n    colors: []\n  }","// https://1.bp.blogspot.com/-aQauElTPaCg/YL_mdg37mqI/AAAAAAAAMQI/kcwwNj-Qr9EYV4HfnNnPJPtZc299246oACLcBGAsYHQ/s1600/Lego%2BColors%2Bpicture.jpg\n\nexport default [\n  \"Black\", // 0\",\n  \"Chrome Black\", // 64\",\n  \"Speckle Black-Silver\", // 132\",\n  \"Dark Gray\", // 8\",\n  \"Dark Bluish Gray\", // 72\",\n  \"Light Bluish Gray\", // 71\",\n  \"Light Gray\", // 7\",\n  \"White\", // 15\",\n  \"Brown\", // 6\",\n  \"Tan\", // 19\",\n  \"Dark Tan\", // 28\",\n  \"Medium Dark Flesh\", // 84\",\n  \"Dark Brown\", // 308\",\n  \"Reddish Brown\", // 70\",\n  \"Red\", // 4\",\n  \"Orange\", // 25\",\n  \"Light Yellow\", // 18\",\n  \"Pearl Gold\", // 297\",\n  \"Yellow\", // 14\",\n  \"Bright Green\", // 10\",\n  \"Light Green\", // 17\",\n  \"Lime\", // 27\",\n  \"Green\", // 2\",\n  \"Sand Green\", // 378\",\n  \"Light Turquoise\", // 11\",\n  \"Dark Turquoise\", // 3\",\n  \"Light Blue\", // 9\",\n  \"Dark Azure\", // 321\",\n  \"Blue\", // 1\",\n  \"Purple\", // 22\",\n  \"Pink\", // 13\",\n  \"Dark Pink\", // 5\",\n  \"Salmon\", // 12\",\n  \"Light Violet\", // 20\",\n  \"Trans-Black\", // 40\",\n  \"Trans-Black IR Lens\", // 32\",\n  \"Trans-Clear\", // 47\",\n  \"Trans-Red\", // 36\",\n  \"Trans-Neon Orange\", // 57\",\n  \"Trans-Neon Yellow\", // 54\",\n  \"Trans-Yellow\", // 46\",\n  \"Trans-Neon Green\", // 42\",\n  \"Trans-Bright Green\", // 35\",\n  \"Trans-Green\", // 34\",\n  \"Trans-Very Lt Blue\", // 43\",\n  \"Trans-Light Blue\", // 41\",\n  \"Trans-Dark Blue\", // 33\",\n  \"Trans-Dark Pink\", // 45\",\n  \"Trans-Purple\", // 52\",\n\n  \"Glow In Dark Opaque\", // 21\",\n  \"Dark Blue-Violet\", // 23\",\n  \"Magenta\", // 26\",\n  \"Bright Pink\", // 29\",\n  \"Medium Lavender\", // 30\",\n  \"Lavender\", // 31\",\n  \"Chrome Antique Brass\", // 60\",\n  \"Chrome Blue\", // 61\",\n  \"Chrome Green\", // 62\",\n  \"Chrome Pink\", // 63\",\n  \"Very Light Orange\", // 68\",\n  \"Light Purple\", // 69\",\n  \"Medium Blue\", // 73\",\n  \"Medium Green\", // 74\",\n  \"Speckle Black-Copper\", // 75\",\n  \"Speckle DBGray-Silver\", // 76\",\n  \"Light Pink\", // 77\",\n  \"Light Flesh\", // 78\",\n  \"Milky White\", // 79\",\n  \"Metallic Silver\", // 80\",\n  \"Metallic Green\", // 81\",\n  \"Metallic Gold\", // 82\",\n  \"Dark Purple\", // 85\",\n  \"Dark Flesh\", // 86\",\n  \"Royal Blue\", // 89\",\n  \"Flesh\", // 92\",\n  \"Light Salmon\", // 100\",\n  \"Violet\", // 110\",\n  \"Blue-Violet\", // 112\",\n  \"Glitter Trans-Dark Pink\", // 114\",\n  \"Medium Lime\", // 115\",\n  \"Glitter Trans-Clear\", // 117\",\n  \"Aqua\", // 118\",\n  \"Light Lime\", // 120\",\n  \"Light Orange\", // 125\",\n  \"Glitter Trans-Purple\", // 129\",\n  \"Speckle Black-Gold\", // 133\",\n  \"Copper\", // 134\",\n  \"Pearl Light Gray\", // 135\",\n  \"Metal Blue\", // 137\",\n  \"Pearl Light Gold\", // 142\",\n  \"Trans-Medium Blue\", // 143\",\n  \"Pearl Dark Gray\", // 148\",\n  \"Pearl Very Light Gray\", // 150\",\n  \"Very Light Bluish Gray\", // 151\",\n  \"Yellowish Green\", // 158\",\n  \"Flat Dark Gold\", // 178\",\n  \"Flat Silver\", // 179\",\n  \"Trans-Orange\", // 182\",\n  \"Pearl White\", // 183\",\n  \"Bright Light Orange\", // 191\",\n  \"Bright Light Blue\", // 212\",\n  \"Rust\", // 216\",\n  \"Bright Light Yellow\", // 226\",\n  \"Trans-Pink\", // 230\",\n  \"Sky Blue\", // 232\",\n  \"Trans-Light Purple\", // 236\",\n  \"Dark Blue\", // 272\",\n  \"Dark Green\", // 288\",\n  \"Glow In Dark Trans\", // 294\",\n  \"Maersk Blue\", // 313\",\n  \"Dark Red\", // 320\",\n  \"Medium Azure\", // 322\",\n  \"Light Aqua\", // 323\",\n  \"Olive Green\", // 326\",\n  \"Chrome Gold\", // 334\",\n  \"Sand Red\", // 335\",\n  \"Medium Dark Pink\", // 351\",\n  \"Earth Orange\", // 366\",\n  \"Sand Purple\", // 373\",\n  \"Sand Blue\", // 379\",\n  \"Chrome Silver\", // 383\",\n  \"Fabuland Brown\", // 450\",\n  \"Medium Orange\", // 462\",\n  \"Dark Orange\", // 484\",\n  \"Very Light Gray\", // 503\",\n  \"Glow in Dark White\", // 1000\",\n  \"Medium Violet\", // 1001\",\n  \"Glitter Trans-Neon Green\", // 1002\",\n  \"Glitter Trans-Light Blue\", // 1003\",\n  \"Trans-Flame Yellowish Orange\", // 1004\",\n  \"Trans-Fire Yellow\", // 1005\",\n  \"Trans-Light Royal Blue\", // 1006\",\n  \"Reddish Lilac\", // 1007\",\n  \"Vintage Blue\", // 1008\",\n  \"Vintage Green\", // 1009\",\n  \"Vintage Red\", // 1010\",\n  \"Vintage Yellow\", // 1011\",\n  \"Fabuland Orange\", // 1012\",\n  \"Modulex White\", // 1013\",\n  \"Modulex Light Bluish Gray\", // 1014\",\n  \"Modulex Light Gray\", // 1015\",\n  \"Modulex Charcoal Gray\", // 1016\",\n  \"Modulex Tile Gray\", // 1017\",\n  \"Modulex Black\", // 1018\",\n  \"Modulex Tile Brown\", // 1019\",\n  \"Modulex Terracotta\", // 1020\",\n  \"Modulex Brown\", // 1021\",\n  \"Modulex Buff\", // 1022\",\n  \"Modulex Red\", // 1023\",\n  \"Modulex Pink Red\", // 1024\",\n  \"Modulex Orange\", // 1025\",\n  \"Modulex Light Orange\", // 1026\",\n  \"Modulex Light Yellow\", // 1027\",\n  \"Modulex Ochre Yellow\", // 1028\",\n  \"Modulex Lemon\", // 1029\",\n  \"Modulex Pastel Green\", // 1030\",\n  \"Modulex Olive Green\", // 1031\",\n  \"Modulex Aqua Green\", // 1032\",\n  \"Modulex Teal Blue\", // 1033\",\n  \"Modulex Tile Blue\", // 1034\",\n  \"Modulex Medium Blue\", // 1035\",\n  \"Modulex Pastel Blue\", // 1036\",\n  \"Modulex Violet\", // 1037\",\n  \"Modulex Pink\", // 1038\",\n  \"Modulex Clear\", // 1039\",\n  \"Modulex Foil Dark Gray\", // 1040\",\n  \"Modulex Foil Light Gray\", // 1041\",\n  \"Modulex Foil Dark Green\", // 1042\",\n  \"Modulex Foil Light Green\", // 1043\",\n  \"Modulex Foil Dark Blue\", // 1044\",\n  \"Modulex Foil Light Blue\", // 1045\",\n  \"Modulex Foil Violet\", // 1046\",\n  \"Modulex Foil Red\", // 1047\",\n  \"Modulex Foil Yellow\", // 1048\",\n  \"Modulex Foil Orange\", // 1049\",\n  \"Coral\", // 1050\",\n  \"Pastel Blue\", // 1051\",\n  \"Glitter Trans-Orange\", // 1052\",\n  \"Trans-Blue Opal\", // 1053\",\n  \"Trans-Medium Reddish Violet Opal\", // 1054\",\n  \"Trans-Clear Opal\", // 1055\",\n  \"Trans-Brown Opal\", // 1056\",\n  \"Trans-Light Bright Green\", // 1057\",\n  \"Trans-Light Green\", // 1058\",\n  \"Trans-Purple Opal\", // 1059\",\n  \"Trans-Green Opal\", // 1060\",\n  \"Trans-Dark Blue Opal\", // 1061\",\n  \"Lemon\", // 1062\",\n  \"[No Color/Any Color]\", // 9999\"\n]","import sortBy from 'sort-by'\nimport colorsData from './raw/colors.json'\nimport colorOrder from './color-order'\n\ntype ColorData = {\n  id: string,\n  name: string,\n  rgb: string,\n  isTrans: string\n}\n\nexport type Color = {\n  id: string,\n  name: string,\n  rgb: string,\n  isTrans: boolean,\n  sortOrder: number\n}\n\nconst colors = (colorsData as ColorData[])\n  .reduce((acc: {[key: string]: Color}, colorData) => {\n    const colorIndex = colorOrder.indexOf(colorData.name)\n    return Object.assign(acc, {[colorData.id]:\n      {\n        ...colorData,\n        isTrans: colorData.isTrans == 't',\n        sortOrder: colorIndex > -1 ? colorIndex : Number.POSITIVE_INFINITY\n      } as Color\n    })\n  },\n  {}\n)\n\nexport default colors\n\nexport const colorsList = Object.keys(colors)\n  .map(id => colors[id])\n  .sort(sortBy('name'))\n","import elementsData from './raw/elements.json'\nimport type {Color} from './colors'\nimport type {Part} from './parts'\nimport colors from './colors'\nimport {getPart} from './parts'\n\ntype ElementData = {\n  i: string, // elementId\n  p: string, // partNum\n  c: string // colorId\n}\n\nexport type Element = {\n  id: string,\n  part: Part,\n  color: Color\n}\n\nconst partColors : {[keys: string]: {[keys: string]: Element}} = {}\n\nexport const elements = (elementsData as ElementData[]).reduce((acc, {i, p, c}) => {\n  const part = getPart(p),\n        color = colors[c]\n  part.colors.push(color)\n  const element = {\n    id: i,\n    part,\n    color\n  }\n  acc[i] = element\n  partColors[p] = partColors[p] || {}\n  partColors[p][c] = element\n  return acc\n}, {} as {[key: string]: Element})\n\nexport const getElementByPartAndColor = (partNum: string, colorId: string) =>\n  (corrections[partNum] && corrections[partNum][colorId] && elements[corrections[partNum][colorId]]) ||\n  (partColors[partNum] && partColors[partNum][colorId]) ||\n  {\n    id: '-1', // element not found\n    part: getPart(partNum),\n    color: colors[colorId]\n  }\n\nconst corrections : {[keys: string]: {[keys: string]: string}} = {\n  '2654': { // Plates Round Curved and Dishes, Boat Stud\n    '47': '6163901'\n  },\n  '3005': { // 1x1 brick\n    '47': '6220959', // trans clear\n    '378': '4521948' // sand green\n  },\n  '3010': { // sand green 1x3 brick,\n    '378': '4521947'\n  },\n  '3021': { // tan 2x3 plate\n    '19': '4118790'\n  },\n  '3023': { // 1x2 plate\n    '47': '6240204'\n  },\n  '3031': { // tan 4/4 plate,\n    '19': '4243824',\n    '70': '4243838'\n  },\n  '3040b': { // 1x2 sloped brick\n    '15': '4121932' // white\n  },\n  '3673': { // light bluish gray technic pin without friction ridges\n    '71': '4211807'\n  },\n  '3821': { // 1x3x1 door right\n    '4': '4537987', // red\n    '15': '4537987' // white\n  },\n  '4070': { // 1x1 brick special headlamp\n    '1': '407023' // blue\n  },\n  '4733': { // 1x1 brick special snot 4 sides\n    '70': '6133765' // reddish brown\n  },\n  '6134': { // Hinge Brick 2 x 2 Top Plate Thin\n    '15': '4612342' // white\n  },\n  '6632': { // Technic Beam 1 x 3 Thin\n    '15': '4107826', // white\n  },\n  '14769': { // dark bluish gray 2x2 tile round\n    '72': '4620079'\n  },\n  '18677': { // reddish brown 1x2 plate-special with pin hole underneath\n    '70': '6192310'\n  },\n  '30361c': { // Brick Round 2 x 2 x 2 Robot Body - with Bottom Axle Holder x Shape + O\n    '0': '4194008' // black\n  },\n  '30374': { // Bar 4L (Lightsaber Blade / Wand)\n    '70': '6116613' // reddish brown\n  },\n  '32028': { // light bluish gray 1x2 plate with door grove\n    '72': '4543086',\n    '19': '4160483'\n  },\n  '32039': { // technic axle connector with axle hole\n    '0': '6331716', // black\n    '14': '4107800' // yellow\n  },\n  '3795': { // light bluish gray 2x6 plate\n    '71': '4211452'\n  },\n  '43093': { // blue technic axle pin with friction ridges lengthwise\n    '1': '4206482'\n  },\n  '4536': { // white Cupboard 2 x 3 Drawer\n    '15': '4520636'\n  },\n  '4740': { // green 2x2 dish\n    '2': '4567908'\n  },\n  '44728': { // Bracket 1 x 2 - 2 x 2\n    '72': '6117972' // dark bluish gray\n  },\n  '54200': { // cheese wedge\n    '46': '6245272' // trans yellow\n  },\n  '60583b': { // 1x1x3 brick special with 2 clips\n    '0': '6320325', // black\n    '4': '6320327' // red\n  },\n  '60601': { // Glass for Window 1 x 2 x 2 Flat\n    '47': '6254552'\n  },\n  '61409': { // 1x2 slope with slots\n    '14': '4540384' // yellow\n  },\n  '85557': { // Train Wheel RC Train, Spoked with Technic Axle Hole and Counterweight, 37 mm diameter [Flanged Driver]\n    '4': '6148307' // 'red\n  }\n}\n","import React, { useRef, useState } from 'react'\nimport { ScrollView, StyleSheet, Image, Switch, TouchableOpacity } from 'react-native'\nimport sortBy from 'sort-by'\nimport { Paginator, Picker, Text, TextInput, View } from '../components/Themed'\nimport { RootTabScreenProps } from '../types'\nimport {partsList} from '../data/parts'\nimport { getElementByPartAndColor } from '../data/elements'\nimport { colorsList } from '../data/colors'\nimport {partCategoriesList} from '../data/part-categories'\n\nconst TabsScreen = ({ navigation }: RootTabScreenProps<'Themes'>) => {\n  const defaultSortOrder = 'category.name,subCategory,width,length,height',\n        [sortOrder, setSortOrder] = useState(defaultSortOrder),\n        [partCategory, setPartCategory] = useState(''),\n        [colorFilter, setColorFilter] = useState(''),\n        [showPrints, setShowPrints] = useState(false),\n        [pageSize, setPageSize] = useState(25),\n        [currentPage, setCurrentPage] = useState(0),\n        [filterBy, setFilterBy] = useState(''),\n        scrollRef = useRef(),\n        filteredPartNumbers = partsList.filter(part => {\n          return (part.colors.length > 0) &&\n                 (!filterBy || (part.partNum + part.name).toLowerCase().match(filterBy.toLowerCase())) &&\n                 (!partCategory || part.category.id == partCategory) &&\n                 (showPrints || !part.partNum.match('pr')) &&\n                 (!colorFilter || part.colors.find(({id}) => id == colorFilter))\n        }),\n        defaultColorId = colorFilter || colorsList[0].id\n  return (\n    <View style={styles.container}>\n      <ScrollView ref={scrollRef} style={{\n        paddingBottom: 100,\n        padding: 20,\n        flex: 1,\n        flexGrow: 1\n      }}>\n        <View style={{marginBottom: 20}}>\n          <TextInput\n            label=\"Search Parts\"\n            onChangeText={value => {\n              setCurrentPage(0)\n              setFilterBy(value)\n            }} />\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Picker\n            label=\"Sort by\"\n            selectedValue={sortOrder}\n            onValueChange={value => {\n              setCurrentPage(0)\n              setSortOrder(value)\n            }}>\n            <Picker.Item label=\"Category, size\" value={defaultSortOrder} />\n            <Picker.Item label=\"Size, category\" value={'width,length,height,category.name,subCategory'} />\n            <Picker.Item label=\"Size descending, category\" value={'-width,-length,-height,category.name,subCategory'} />\n          </Picker>\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Picker\n            label=\"Category\"\n            selectedValue={partCategory}\n            onValueChange={value => {\n              setCurrentPage(0)\n              setPartCategory(value)\n            }}>\n            <Picker.Item label=\"All categories\" value=\"\" />\n            {partCategoriesList.map(({id, name}, i) =>\n              <Picker.Item label={name} value={id} key={i} />\n            )}\n          </Picker>\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Picker\n            label=\"Color\"\n            selectedValue={colorFilter}\n            onValueChange={value => {\n              setCurrentPage(0)\n              setColorFilter(value)\n            }}>\n            <Picker.Item label=\"All available colors\" value=\"\" />\n            {colorsList.map(({id, name}, i) =>\n              <Picker.Item label={name} value={id} key={i} />\n            )}\n          </Picker>\n        </View>\n        <View style={{marginBottom: 20}}>\n        <View style={{flex: 1, flexDirection: 'row'}}>\n          <TouchableOpacity\n            style={{\n              paddingRight: 10,\n              flexGrow: 1\n            }}\n            onPress={() => setShowPrints(!showPrints)}\n            >\n            <Text style={{textAlign: 'right'}}>Show printed parts</Text>\n          </TouchableOpacity>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={showPrints ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setShowPrints}\n            value={showPrints}\n          />\n          {/*\n          */}\n        </View>\n      </View>\n        {filteredPartNumbers.length\n          ? filteredPartNumbers\n            .sort(sortBy.apply(sortBy, sortOrder.split(',')))\n            .slice(currentPage * pageSize, currentPage * pageSize + pageSize)\n            .map((part, i: number) => {\n              const defaultColor = part.colors.find(({id}) => id == defaultColorId) || part.colors[0],\n                    element = defaultColor && getElementByPartAndColor(part.partNum, defaultColor.id)\n              return <View style={styles.part} key={i}>\n                {element &&\n                  <Image\n                    style={{marginRight: 10, width: 100, height: 100, backgroundColor: 'gray'}}\n                    source={{uri: `https://www.lego.com/cdn/product-assets/element.img.lod5photo.192x192/${element.id}.jpg`}} />\n                }\n                <View>\n                  <Text>{part.category.name}{part.subCategory ? ', ' + part.subCategory : ''}</Text>\n                  <Text>{part.name}</Text>\n                  <Text>Part Number: {part.partNum}</Text>\n                  <Text>Colors: {part.colors.length}</Text>\n                </View>\n              </View>\n            })\n          : <Text style={{paddingVertical: 20}}>No parts found matching your criteria.</Text>\n        }\n        <View style={{paddingTop: 20}}>\n          <Paginator\n            pageSize={pageSize}\n            numItems={filteredPartNumbers.length}\n            onPageSizeChange={setPageSize}\n            onPageChange={(val : number) => {\n              scrollRef.current?.scrollTo({y: 0, animated: true})\n              setCurrentPage(val)\n            }}\n            selectedValue={currentPage} />\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n\nexport default TabsScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  part: {\n    flex: 1,\n    flexDirection: 'row',\n    textAlign: 'left',\n    paddingVertical: 10,\n    paddingRight: 20,\n    flexGrow: 1\n  },\n  image: {\n    backgroundColor: 'gray',\n    marginRight: 10\n  },\n})\n","import React, {useEffect, useState} from 'react';\nimport { Image as DefaultImage } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\ntype DefaultImageProps = React.ComponentProps<typeof DefaultImage>\ninterface ImageProps extends DefaultImageProps {\n  source: {uri: string},\n  maxWidth?: number,\n  maxHeight?: number\n}\n\nconst ScaledImage = (props: ImageProps) => {\n  const { style, ...otherProps } = props,\n        [width, setImageWidth] = useState(props.width || 100),\n        [height, setImageHeight] = useState(props.height || 100)\n  useEffect(() => {\n    DefaultImage.getSize(props.source.uri, (w, h) => {\n      if(props.width && !props.height) {\n        const newWidth = Math.min(props.width, props.maxWidth || Number.POSITIVE_INFINITY)\n        setImageHeight(h * (newWidth / w))\n        setImageWidth(newWidth)\n      } else if(!props.width && props.height) {\n        const newHeight = Math.min(props.height, props.maxHeight || Number.POSITIVE_INFINITY)\n        setImageHeight(newHeight)\n        setImageWidth(w * (newHeight / h))\n      }\n    })\n  }, [props.width, props.height])\n  return <DefaultImage style={[{\n    backgroundColor: Colors[useColorScheme()].background,\n    width,\n    height\n  }, style]} {...otherProps} />\n}\n\nexport default ScaledImage","import React, { useRef, useState } from 'react'\nimport { ScrollView, StyleSheet, TouchableOpacity } from 'react-native'\nimport sortBy from 'sort-by'\nimport { Paginator, Picker, Text, TextInput, View } from '../components/Themed'\nimport ScaledImage from '../components/ScaledImage'\nimport { RootTabScreenProps } from '../types'\nimport sets from '../data/raw/sets.json'\n\nexport default function TabsScreen({ navigation: {navigate} }: RootTabScreenProps<'Sets'>) {\n  const [sortField, setSortField] = useState('-year'),\n        [pageSize, setPageSize] = useState(25),\n        [filterBy, setFilterBy] = useState(''),\n        [currentPage, setCurrentPage] = useState(0),\n        scrollRef = useRef(),\n        filteredSets = filterBy\n          ? sets.filter(({name, setNum}) => (setNum + name).toLowerCase().match(filterBy.toLowerCase()))\n          : sets\n\n  return (\n    <View style={styles.container}>\n      <ScrollView ref={scrollRef} style={{\n        padding: 20,\n        paddingBottom: 100,\n      }}>\n        <View>\n          <TextInput\n            label=\"Search Sets\"\n            onChangeText={value => {\n              setCurrentPage(0)\n              setFilterBy(value)\n            }} />\n        </View>\n        <View style={{\n          marginBottom: 20,\n          marginTop: 20\n        }}>\n          <Picker\n            label=\"Sort by\"\n            prompt=\"Sort by\"\n            selectedValue={sortField}\n            onValueChange={(field: string) => {\n              setCurrentPage(0)\n              setSortField(field)\n            }}>\n            <Picker.Item label=\"Set Number\" value=\"setNumSort\" />\n            <Picker.Item label=\"Set Number (desc)\" value=\"-setNumSort\" />\n            <Picker.Item label=\"Name\" value=\"name\" />\n            <Picker.Item label=\"Name (desc)\" value=\"-name\" />\n            <Picker.Item label=\"Parts\" value=\"numParts\" />\n            <Picker.Item label=\"Parts (desc)\" value=\"-numParts\" />\n            <Picker.Item label=\"Year Released\" value=\"year\" />\n            <Picker.Item label=\"Year Released (desc)\" value=\"-year\" />\n          </Picker>\n        </View>\n        {filteredSets.length\n          ? filteredSets\n            .sort(sortBy.apply(sortBy, sortField.split(',')))\n            .slice(currentPage * pageSize, currentPage * pageSize + pageSize)\n            .map(set =>\n              <TouchableOpacity key={set.setNum} style={styles.set} onPress={() => {\n                navigate('Set', {id: set.setNum})\n              }}>\n                <ScaledImage\n                  style={styles.image}\n                  width={100}\n                  source={{uri: `https://images.brickset.com/sets/images/${set.setNum}.jpg`}} />\n                <View>\n                  <Text>{set.setNum}</Text>\n                  <Text>{set.name}</Text>\n                  <Text>{set.numParts.toLocaleString()} parts</Text>\n                  <Text>Released in {set.year}</Text>\n                </View>\n              </TouchableOpacity>\n            )\n          : <Text style={{textAlign: 'center'}}>\n            No results match your search criteria\n          </Text>\n        }\n        <View style={{height: 20}} />\n        {filteredSets.length\n          ? <Paginator\n              pageSize={pageSize}\n              numItems={filteredSets.length}\n              onPageSizeChange={setPageSize}\n              onPageChange={(val : number) => {\n                scrollRef.current?.scrollTo({y: 0, animated: true})\n                setCurrentPage(val)\n              }}\n              selectedValue={currentPage} />\n          : null\n        }\n        <View style={{height: 50}} />\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  nowrapRow: {\n    flex: 1,\n    flexDirection: 'row-reverse',\n    flexWrap: 'nowrap'\n  },\n  set: {\n    flex: 1,\n    flexDirection: 'row',\n    textAlign: 'left',\n    paddingVertical: 10,\n    paddingRight: 20,\n    flexGrow: 1\n  },\n  image: {\n    backgroundColor: 'gray',\n    marginRight: 10\n  },\n})\n","import inventoryPartsData from './raw/inventory_parts.json'\nimport {getPart, Part} from './parts'\nimport type {Color} from './colors'\nimport colors from './colors'\nimport {getElementByPartAndColor, Element} from './elements'\n\ntype InventoryPartData = {\n  p: string, // partNum\n  c: string, // string\n  q: number, // quantity\n  s: number // isSpare\n}\n\ntype InventoryPart = {\n  part: Part,\n  color: Color,\n  quantity: number,\n  isSpare: boolean,\n  element: Element\n}\n\nconst data = inventoryPartsData as {[key: string]: InventoryPartData[]}\n\nexport default Object.keys(data).reduce((acc: {[id: string]: InventoryPart[]}, id: string) => {\n  acc[id] = data[id].map(inventoryPartData => ({\n    part: getPart(inventoryPartData.p),\n    color: colors[inventoryPartData.c],\n    quantity: inventoryPartData.q,\n    isSpare: inventoryPartData.s == 1,\n    element: getElementByPartAndColor(inventoryPartData.p, inventoryPartData.c)\n  }) as InventoryPart)\n  return acc\n}, {})\n","import React, {useState} from 'react'\nimport sortBy from 'sort-by'\nimport { Image, Switch, TouchableOpacity } from 'react-native'\nimport { Picker, Text, View } from './Themed'\nimport inventoryParts from '../data/inventory-parts'\n\nconst Inventory = ({id}: {id: string, setNum: string}) => {\n  const defaultSortOrder = 'element.part.category.name,element.part.subCategory,element.part.width,element.part.length,element.part.height,element.color.sortOrder,name',\n        [sortOrder, setSortOrder] = useState(defaultSortOrder),\n        [showSpareParts, setShowSpareParts] = useState(false),\n        setInventoryParts = inventoryParts[id] || []\n  return (\n    <View>\n      <View style={{\n          marginBottom: 20,\n          marginTop: 10\n        }}>\n        <Picker\n          label=\"Sort by\"\n          selectedValue={sortOrder}\n          onValueChange={setSortOrder}>\n          <Picker.Item label=\"Category, size, and color\" value={defaultSortOrder} />\n          <Picker.Item label=\"Color, category, and size\" value={'element.color.sortOrder,element.part.category.name,element.part.subCategory,element.part.width,element.part.length,element.part.height,name'} />\n          <Picker.Item label=\"Size, category, and color\" value={'element.part.width,element.part.length,element.part.height,element.part.category.name,element.part.subCategory,element.color.sortOrder,name'} />\n          <Picker.Item label=\"Size descending, category, and color\" value={'-element.part.width,-element.part.length,-element.part.height,element.part.category.name,element.part.subCategory,element.color.sortOrder,name'} />\n          <Picker.Item label=\"Size, color, and category\" value={'element.part.width,element.part.length,element.part.height,element.color.sortOrder,element.part.category.name,element.part.subCategory,name'} />\n          <Picker.Item label=\"Size descending, color, and category\" value={'-element.part.width,-element.part.length,-element.part.height,element.color.sortOrder,element.part.category.name,element.part.subCategory,name'} />\n        </Picker>\n      </View>\n      <View style={{marginBottom: 20}}>\n        <View style={{flex: 1, flexDirection: 'row'}}>\n          <TouchableOpacity\n            style={{\n              paddingRight: 10,\n              flexGrow: 1\n            }}\n            onPress={() => setShowSpareParts(!showSpareParts)}\n          >\n            <Text style={{textAlign: 'right'}}>Show spare parts</Text>\n          </TouchableOpacity>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={showSpareParts ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setShowSpareParts}\n            value={showSpareParts}\n          />\n        </View>\n      </View>\n      {(showSpareParts ? setInventoryParts : setInventoryParts.filter(({isSpare}) => !isSpare))\n        .sort(sortBy.apply(sortBy, sortOrder.split(',')))\n        .map(({element: {id, part, color}, quantity, isSpare}, i: number) => {\n          return <View key={i} style={{flex: 1, flexDirection: 'row', flexGrow: 1, marginBottom: 10}}>\n            <Image\n              style={{marginRight: 10, width: 100, height: 100, backgroundColor: 'gray'}}\n              source={{uri: `https://www.lego.com/cdn/product-assets/element.img.lod5photo.192x192/${id}.jpg`}} />\n            <View>\n              <Text>Part: {part.partNum} Element: {id}</Text>\n              <Text>{part.category.name}{part.subCategory ? ', ' + part.subCategory : ''}</Text>\n              <Text>{part.name}</Text>\n              <Text>{color.name} ({color.id})</Text>\n              <Text>Qty: {quantity}{isSpare ? ' (spare part)' : ''}</Text>\n            </View>\n          </View>\n        })\n      }\n    </View>\n  )\n}\n\nexport default Inventory","import React, { useEffect, useState } from 'react';\nimport { ScrollView, Linking, Button } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport ScaledImage from '../components/ScaledImage'\nimport { RootTabScreenProps } from '../types'\nimport sets from '../data/raw/sets.json'\nimport themes from '../data/raw/themes-by-id.json'\nimport Inventory from '../components/Inventory'\n\nexport default function SetScreen({ navigation }: RootTabScreenProps<'Set'>) {\n  const {routes, index} = navigation.getState(),\n        [viewWidth, setViewWidth] = useState(0),\n        set = sets.find(set => set.setNum === routes[index].params.id)\n  useEffect(() => {\n    navigation.setOptions({title: set.setNum + ' ' + set.name})\n  }, [set])\n  return (\n    <View>\n      <ScrollView style={{padding: 20}}\n        onLayout={({nativeEvent}) =>\n          setViewWidth(nativeEvent.layout.width - 40)\n        }>\n        <ScaledImage\n          width={viewWidth}\n          maxWidth={500}\n          source={{uri: `https://images.brickset.com/sets/images/${set.setNum}.jpg`}}\n          style={{marginBottom: 20}} />\n        <View style={{marginBottom: 20}}>\n          <Text>Set number: {set.setNum}</Text>\n          <Text>Theme: {themes[set.themeId].name}</Text>\n          <Text>{set.name}</Text>\n          <Text>{set.numParts.toLocaleString()} parts</Text>\n          <Text>Released in {set.year}</Text>\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Button onPress={() =>\n            Linking.openURL('https://brickset.com/sets/' + set.setNum)\n          } title=\"Brickset\" />\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Button onPress={() =>\n            Linking.openURL('https://rebrickable.com/sets/' + set.setNum)\n          } title=\"Rebrickable\" />\n        </View>\n        {set.inventories?.map((inventory: any) =>\n          <Inventory id={inventory.id} key={inventory.id} />\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('https://jeromedane.github.io/')],\n  config: {\n    screens: {\n      Root: {\n        path: 'brick-tools-for-lego',\n        screens: {\n          Parts: 'parts',\n          Themes: 'themes',\n          Sets: 'sets',\n          About: 'about',\n        },\n      },\n      Set: 'brick-tools-for-lego/set/:id',\n      Modal: 'brick-tools-for-lego/modal',\n      NotFound: '*',\n    },\n  },\n};\n\nexport default linking;\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\n// import 'react-native-gesture-handler'\nimport {\n  AntDesign,\n  FontAwesome,\n  MaterialIcons,\n  MaterialCommunityIcons\n} from '@expo/vector-icons';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerItem, DrawerItemList, DrawerContentScrollView } from '@react-navigation/drawer';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable, Linking } from 'react-native';\nimport { Text } from '../components/Themed'\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport AboutScreen from '../screens/AboutScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ThemesScreen from '../screens/Themes';\nimport PartsScreen from '../screens/Parts'\nimport SetsScreen from '../screens/Sets';\nimport SetScreen from '../screens/Set';\nimport { RootStackParamList, RootDrawerParamList } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\n const Stack = createNativeStackNavigator<RootStackParamList>();\n\n const Drawer = createDrawerNavigator<RootDrawerParamList>()\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ?? route?.name} - Brick Tools for LEGO®`,\n      }}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Root\" component={DrawerNav} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Set\" component={SetScreen} options={{ }} />\n        <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst MenuButton = ({navigation}: any) => {\n  const colorScheme = useColorScheme();\n  console.log(colorScheme, Colors, Colors[colorScheme])\n  return  <Pressable\n    onPress={() => navigation.toggleDrawer()}\n    style={({ pressed }) => ({opacity: pressed ? 0.5 : 1})}>\n    <MaterialIcons\n      name=\"menu\"\n      size={25}\n      style={{marginLeft: 20}}\n      color={Colors[colorScheme].text}\n    />\n  </Pressable>\n}\n\nconst DrawerContent = (props: any) => {\n  return (\n    <DrawerContentScrollView {...props}>\n      <Text style={{padding: 20, fontWeight: 'bold'}}>Brick Tools for LEGO®</Text>\n      <DrawerItemList {...props} />\n      <DrawerItem\n        label=\"Project Homepage\"\n        icon={({color}) => <AntDesign name=\"github\" size={25} color={color} />}\n        onPress={() => Linking.openURL('https://github.com/JeromeDane/brick-tools-for-lego/')}\n      />\n    </DrawerContentScrollView>\n  );\n}\n\nconst DrawerNav = () => {\n  return <Drawer.Navigator initialRouteName=\"Sets\" drawerContent={(props) => <DrawerContent {...props} />}>\n    <Drawer.Screen\n      name=\"Sets\"\n      component={SetsScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <FontAwesome name=\"cubes\" size={20} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"Themes\"\n      component={ThemesScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <AntDesign name=\"picture\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"Parts\"\n      component={PartsScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <MaterialCommunityIcons name=\"puzzle\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"About\"\n      component={AboutScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <AntDesign name=\"infocirlce\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n  </Drawer.Navigator>\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nrequire('intl')\nrequire('intl/locale-data/jsonp/en.js')\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}
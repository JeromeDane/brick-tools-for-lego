{"version":3,"sources":["src/constants/Colors.ts","src/data/colors.ts","src/data/elements.ts","src/data/parts.ts","src/components/Themed.tsx","src/data/part-categories.ts","src/components/Switch.tsx","src/components/ScaledImage.tsx","src/data/themes.ts","src/components/Spinner.tsx","src/components/APISupport.tsx","src/data/inventory-parts.ts","webpack:///./index.js?41f5","src/api/brickset.tsx","src/App.tsx","src/hooks/useCachedResources.ts","src/hooks/useColorScheme.ts","src/assets/fonts/SpaceMono-Regular.ttf","src/navigation/Navigation.tsx","src/components/TextLink.tsx","src/data/sets.ts","src/screens/AboutScreen.tsx","src/screens/NotFoundScreen.tsx","src/screens/Element.tsx","src/data/color-order.ts","src/screens/Themes.tsx","src/screens/Parts.tsx","src/screens/Sets.tsx","src/screens/Settings.tsx","src/navigation/linking.ts","src/navigation/SetTabs.tsx","src/screens/SetDetails.tsx","src/components/Checkbox.tsx","src/screens/SetParts.tsx","src/components/Inventory.tsx","src/screens/SetInstructions.tsx"],"names":["light","text","background","tint","tabIconDefault","tabIconSelected","dark","colors","colorsData","reduce","acc","colorData","colorIndex","colorOrder","indexOf","name","id","isTrans","sortOrder","Number","POSITIVE_INFINITY","colorsList","Object","keys","map","sort","partColors","elements","elementsData","i","p","c","part","getPart","color","push","element","partNum","colorId","corrections","sizeRegex","getSubCategory","partCatId","match","parts","partsData","partData","size","width","parseInt","padStart","length","heightParsed","height","isNaN","nameSort","replace","category","getPartCategory","subCategory","partsList","partMaterial","props","style","otherProps","backgroundColor","useThemeColor","View","flex","flexDirection","flexGrow","position","paddingTop","label","Text","top","left","zIndex","paddingHorizontal","fontSize","borderWidth","borderColor","borderRadius","padding","colorName","theme","colorFromProps","Colors","lightColor","darkColor","Picker","borderStyle","dropdownIconColor","Item","DefaultPicker","Icon","FontAwesome","numPages","Math","ceil","numItems","pageSize","pickerItems","key","toString","value","justifyContent","alignItems","prompt","selectedValue","onValueChange","num","onPageChange","onPageSizeChange","marginRight","TouchableOpacity","onPress","marginLeft","partCategoriesListUnsorted","partCategories","categoriesData","categoryData","partCategoriesList","marginTop","textAlign","trackColor","false","true","thumbColor","ios_backgroundColor","useState","setImageSize","useEffect","DefaultImage","getSize","source","uri","w","h","newWidth","min","maxWidth","newHeight","maxHeight","themesList","themesData","visible","textContent","overlayColor","textStyle","children","Platform","OS","url","data","inventoryPartsData","inventoryPartData","quantity","q","isSpare","s","getElementByPartAndColor","registerRootComponent","App","apiKey","Constants","manifest","extra","BRICKSET_API_KEY","storageRead","ApiContext","createContext","isLoggedIn","collection","sets","setsList","setWanted","wanted","async","bricksetID","setNum","setOwned","qtyOwned","userHash","BRICKSET_KEYS","setIsLoggedIn","setCollection","saveCollection","updatedCollection","AsyncStorage","setItem","JSON","stringify","api","method","Promise","resolve","reject","fetch","mode","headers","body","then","response","parse","e","console","warn","catch","log","getItem","hash","Boolean","result","Provider","login","username","password","status","error","logOut","loadCollection","parseCollection","setsData","set","number","numberVariant","params","owned","ownedResult","wantedResult","SetID","want","rating","notes","useContext","isLoadingComplete","colorScheme","SafeAreaProvider","BricksetApiContext","StatusBar","require","React","setLoadingComplete","SplashScreen","preventAutoHideAsync","Font","loadAsync","font","hideAsync","module","exports","NavigationContainer","linking","documentTitle","formatter","options","route","title","DarkTheme","DefaultTheme","Stack","Navigator","Screen","component","DrawerNav","headerShown","ElementScreen","SetTabs","NotFoundScreen","createNativeStackNavigator","Drawer","createDrawerNavigator","MenuButton","navigation","Pressable","toggleDrawer","opacity","pressed","MaterialIcons","DrawerContent","DrawerContentScrollView","fontWeight","DrawerItemList","initialRouteName","drawerContent","SetsScreen","drawerIcon","headerLeft","ThemesScreen","AntDesign","PartsScreen","MaterialCommunityIcons","SettingsScreen","AboutScreen","Linking","openURL","emptyLEGOCom","retailPrice","dateFirstAvailable","dateLastAvailable","useCollection","byId","list","setSets","setData","bricksetSet","bricksetSets","myCollection","year","themes","themeId","numParts","setNumSort","inventories","LEGOCom","US","UK","CA","DE","ownedBy","collections","wantedBy","image","imageURL","thumbnailURL","setID","ScrollView","styles","container","paragraph","Button","version","StyleSheet","create","linkText","marginBottom","link","paddingVertical","getState","routes","index","setOptions","Image","brickLink","filter","parentId","yearFrom","yearTo","numSets","default","setSortOrder","partCategory","setPartCategory","colorFilter","setColorFilter","showPrints","setShowPrints","setPageSize","currentPage","setCurrentPage","filterBy","setFilterBy","scrollRef","useRef","filteredPartNumbers","toLowerCase","find","defaultColorId","ref","paddingBottom","TextInput","onChangeText","sortBy","apply","split","slice","defaultColor","Paginator","val","current","scrollTo","y","animated","paddingRight","sortField","setSortField","setTheme","collectionFilter","setCollectionFilter","useIsLoggedIn","useSets","filteredSets","marginVertical","toLocaleString","field","navigate","nowrapRow","flexWrap","setUsername","setPassword","loadingMessage","setLoadingMessage","useLogin","useLogOut","useLoadCollection","heading","secureTextEntry","prefixes","makeUrl","config","screens","Root","path","Parts","Themes","Sets","About","Settings","Element","Set","SetDetails","SetInstructions","SetParts","Modal","NotFound","Tab","createMaterialTopTabNavigator","initialParams","SetDetailsScreen","SetPartsScreen","SetInstructionsScreen","quantityOwned","setQuantityOwned","useSetWanted","useSetOwned","toFixed","newValue","keyboardType","int","onBlur","tintColors","lineWidth","inventory","inventoryParts","count","inventoryPart","defaultSortOrder","showSpareParts","setShowSpareParts","setInventoryParts","instructions","setInstructions","downloadUrl","setDownloadUrl","setError","useApi","setNumber","instruction","disabled","URL","setTimeout","description","display"],"mappings":"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AAY9I,QAAS,kBACjCmL,UAAQC,QAAQ,2DAA2DxQ,EAAKK,QAAhE,YAAqF9B,UAAO2B,EAAMlB,IAAIwU,UAAUxU,WAjC5I,M,8bAAA,OACA,OAEA,QACA,SACA,Y,ugs3ECHe,CACb,QACA,eACA,uBACA,YACA,mBACA,oBACA,aACA,QACA,QACA,MACA,WACA,oBACA,aACA,gBACA,MACA,SACA,eACA,aACA,SACA,eACA,cACA,OACA,QACA,aACA,kBACA,iBACA,aACA,aACA,OACA,SACA,OACA,YACA,SACA,eACA,cACA,sBACA,cACA,YACA,oBACA,oBACA,eACA,mBACA,qBACA,cACA,qBACA,mBACA,kBACA,kBACA,eAEA,sBACA,mBACA,UACA,cACA,kBACA,WACA,uBACA,cACA,eACA,cACA,oBACA,eACA,cACA,eACA,uBACA,wBACA,aACA,cACA,cACA,kBACA,iBACA,gBACA,cACA,aACA,aACA,QACA,eACA,SACA,cACA,0BACA,cACA,sBACA,OACA,aACA,eACA,uBACA,qBACA,SACA,mBACA,aACA,mBACA,oBACA,kBACA,wBACA,yBACA,kBACA,iBACA,cACA,eACA,cACA,sBACA,oBACA,OACA,sBACA,aACA,WACA,qBACA,YACA,aACA,qBACA,cACA,WACA,eACA,aACA,cACA,cACA,WACA,mBACA,eACA,cACA,YACA,gBACA,iBACA,gBACA,cACA,kBACA,qBACA,gBACA,2BACA,2BACA,+BACA,oBACA,yBACA,gBACA,eACA,gBACA,cACA,iBACA,kBACA,gBACA,4BACA,qBACA,wBACA,oBACA,gBACA,qBACA,qBACA,gBACA,eACA,cACA,mBACA,iBACA,uBACA,uBACA,uBACA,gBACA,uBACA,sBACA,qBACA,oBACA,oBACA,sBACA,sBACA,iBACA,eACA,gBACA,yBACA,0BACA,0BACA,2BACA,yBACA,0BACA,sBACA,mBACA,sBACA,sBACA,QACA,cACA,uBACA,kBACA,mCACA,mBACA,mBACA,2BACA,oBACA,oBACA,mBACA,uBACA,QACA,yB,2152LC1La,WACb,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","file":"static/js/app.bbb40708.chunk.js","sourcesContent":["const tintColorLight = '#2f95dc'\nconst tintColorDark = '#fff'\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark\n  }\n}\n","import sortBy from 'sort-by'\nimport colorsData from './raw/colors.json'\nimport colorOrder from './color-order'\n\ntype ThirdPartyColor = {\n  id: string,\n  name: string\n}\n\ntype ColorData = {\n  id: string;\n  name: string;\n  rgb: string;\n  isTrans: string;\n  firstYear: number;\n  lastYear: number;\n  lego: ThirdPartyColor;\n  lDraw: ThirdPartyColor;\n  brickLink: ThirdPartyColor;\n  brickOwl: ThirdPartyColor;\n}\n\nexport type Color = {\n  id: string;\n  name: string;\n  rgb: string;\n  isTrans: boolean;\n  sortOrder: number;\n  firstYear: number;\n  lastYear: number;\n  lego: ThirdPartyColor;\n  lDraw: ThirdPartyColor;\n  brickLink: ThirdPartyColor;\n  brickOwl: ThirdPartyColor;\n}\n\nconst colors = (colorsData as ColorData[])\n  .reduce((acc: {[key: string]: Color}, colorData) => {\n    const colorIndex = colorOrder.indexOf(colorData.name)\n    return Object.assign(acc, {[colorData.id]:\n      {\n        ...colorData,\n        isTrans: colorData.isTrans == 't',\n        sortOrder: colorIndex > -1 ? colorIndex : Number.POSITIVE_INFINITY\n      } as Color\n    })\n  },\n  {}\n  )\n\nexport default colors\n\nexport const colorsList = Object.keys(colors)\n  .map(id => colors[id])\n  .sort(sortBy('name'))\n","import elementsData from './raw/elements.json'\nimport type {Color} from './colors'\nimport type {Part} from './parts'\nimport colors from './colors'\nimport {getPart} from './parts'\n\ntype ElementData = {\n  i: string, // elementId\n  p: string, // partNum\n  c: string // colorId\n}\n\nexport type Element = {\n  id: string,\n  part: Part,\n  color: Color\n}\n\nconst partColors : {[keys: string]: {[keys: string]: Element}} = {}\n\nexport const elements = (elementsData as ElementData[]).reduce((acc, {i, p, c}) => {\n  const part = getPart(p),\n        color = colors[c]\n  part.colors.push(color)\n  const element = {\n    id: i,\n    part,\n    color\n  }\n  acc[i] = element\n  partColors[p] = partColors[p] || {}\n  partColors[p][c] = element\n  return acc\n}, {} as {[key: string]: Element})\n\nexport const getElementByPartAndColor = (partNum: string, colorId: string) =>\n  (corrections[partNum] && corrections[partNum][colorId] && elements[corrections[partNum][colorId]]) ||\n  (partColors[partNum] && partColors[partNum][colorId]) ||\n  {\n    id: '-1', // element not found\n    part: getPart(partNum),\n    color: colors[colorId]\n  }\n\nconst corrections : {[keys: string]: {[keys: string]: string}} = {\n  '2654': { // Plates Round Curved and Dishes, Boat Stud\n    '47': '6163901'\n  },\n  '3005': { // 1x1 brick\n    '47': '6220959', // trans clear\n    '378': '4521948' // sand green\n  },\n  '3010': { // sand green 1x3 brick,\n    '378': '4521947'\n  },\n  '3021': { // tan 2x3 plate\n    '19': '4118790'\n  },\n  '3023': { // 1x2 plate\n    '47': '6240204'\n  },\n  '3031': { // tan 4/4 plate,\n    '19': '4243824',\n    '70': '4243838'\n  },\n  '3032': { // 4 x 6 plate\n    '72': '4211115' // dark bluish gray\n  },\n  '3622': { // 1 x 3 brick\n    '484': '6263221' // dark orange\n  },\n  '4175': {\n    '0': '6285241' // black\n  },\n  '3040b': { // 1x2 sloped brick\n    '15': '4121932' // white\n  },\n  '3673': { // light bluish gray technic pin without friction ridges\n    '71': '4211807'\n  },\n  '3679': { // Turntable 2 x 2 plate top\n    '71': '4540203' // light bluish gray\n  },\n  '3821': { // 1x3x1 door right\n    '4': '4537987', // red\n    '15': '4537987' // white\n  },\n  '4070': { // 1x1 brick special headlamp\n    '1': '407023' // blue\n  },\n  '4733': { // 1x1 brick special snot 4 sides\n    '70': '6133765' // reddish brown\n  },\n  '6134': { // Hinge Brick 2 x 2 Top Plate Thin\n    '15': '4612342' // white\n  },\n  '6632': { // Technic Beam 1 x 3 Thin\n    '15': '4107826' // white\n  },\n  '14769': { // dark bluish gray 2x2 tile round\n    '72': '4620079'\n  },\n  '18677': { // reddish brown 1x2 plate-special with pin hole underneath\n    '70': '6192310'\n  },\n  '30361c': { // Brick Round 2 x 2 x 2 Robot Body - with Bottom Axle Holder x Shape + O\n    '0': '4194008' // black\n  },\n  '3062b': { // 1 x 1 round brick\n    '14': '306224' // yellow\n  },\n  '3069b': {  // 1 x 2 tile with groove\n    '47': '6251294' // trans-clear\n  },\n  '30374': { // Bar 4L (Lightsaber Blade / Wand)\n    '70': '6116613' // reddish brown\n  },\n  '32028': { // light bluish gray 1x2 plate with door grove\n    '72': '4543086',\n    '19': '4160483'\n  },\n  '32039': { // technic axle connector with axle hole\n    '0': '6331716', // black\n    '14': '4107800' // yellow\n  },\n  '3795': { // light bluish gray 2x6 plate\n    '71': '4211452'\n  },\n  '43093': { // blue technic axle pin with friction ridges lengthwise\n    '1': '4206482'\n  },\n  '4536': { // white Cupboard 2 x 3 Drawer\n    '15': '4520636'\n  },\n  '4595': { // Brick special 1x1 with studs on sides\n    '0': '4523339' // black\n  },\n  '4740': { // green 2x2 dish\n    '2': '4567908'\n  },\n  '32000': { // 1 x 2 technic brick holes through side\n    '15': '3200001'\n  },\n  '44294': { // technic axle 7L\n    '71': '4211805'\n  },\n  '44728': { // Bracket 1 x 2 - 2 x 2\n    '72': '6117972' // dark bluish gray\n  },\n  '54200': { // cheese wedge\n    '0': '4504382', // black\n    '14': '4504381', // yellow\n    '46': '6245272' // trans yellow\n  },\n  '60032': {\n    '0': '4539128' // wall panel single hole\n  },\n  '60583b': { // 1x1x3 brick special with 2 clips\n    '0': '6320325', // black\n    '4': '6320327' // red\n  },\n  '60596': { // door frame\n    '15': '6262945'\n  },\n  '60601': { // Glass for Window 1 x 2 x 2 Flat\n    '47': '6254552'\n  },\n  '61409': { // 1x2 slope with slots\n    '14': '4540384' // yellow\n  },\n  '85557': { // Train Wheel RC Train, Spoked with Technic Axle Hole and Counterweight, 37 mm diameter [Flanged Driver]\n    '4': '6148307' // 'red\n  },\n  '87994': { // Bar 3L\n    '71': '6093527'\n  },\n  '92690': { // Light Bluish Gray Bar 1L with Top Stud and 2 Side\n    '71': '4640844'\n  }\n}\n","import partsData from './raw/parts.json'\nimport type {Color} from './colors'\nimport type {PartCategory} from './part-categories'\nimport {getPartCategory} from './part-categories'\n\ntype PartData = {\n  partNum: string,\n  name: string,\n  partCatId: string,\n  partMaterial: string\n}\n\nexport interface Part extends PartData {\n  nameSort: string,\n  width: number,\n  length: number,\n  height: number,\n  category: PartCategory,\n  subCategory: string,\n  colors: Color[]\n}\n\nconst sizeRegex = /(\\d+)\\s?x\\s?(\\d+)(\\s?x\\s?(\\d+)([^/]|$))?/\n\nconst getSubCategory = ({name, partCatId} : PartData) : string => {\n  switch(partCatId) {\n    case '32': // Bars, Ladders, and Fences\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Eye/i)) return 'Eye'\n      if(name.match(/Fence/i)) return 'Fence'\n      if(name.match(/Lever/i)) return 'Lever'\n      if(name.match(/Stair/i)) return 'Stair'\n      if(name.match(/Stop\\sRing/i)) return 'Stop Ring'\n      break\n    case '37': // Bricks Curved\n      if(name.match(/Arch/i)) return 'Arch'\n      break\n    case '20': // Bricks Round and Cones\n      if(name.match(/Cone/i)) return 'Cone'\n      if(name.match(/Dome/i)) return 'Dome'\n      break\n    case '3': // Bricks Sloped\n      if(name.match(/Inverted/i)) return 'Inverted'\n      if(name.match(/Slots/i)) return 'Slots'\n      break\n    case '5': // \"Bricks Special\n      if(name.match(/Bar|Handle/i)) return 'Bar'\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Headlight/i)) return 'Headlight'\n      if(name.match(/Masonry/i)) return 'Masonry'\n      if(name.match(/Pins/i)) return 'Pins'\n      if(name.match(/Studs.+(1|one)\\sSide/i)) return 'SNOT'\n      if(name.match(/Studs.+(2|two)\\sSide/i)) return 'SNOT, 2 sided'\n      if(name.match(/Studs.+(3|three)\\sSide/i)) return 'SNOT, 3 sided'\n      if(name.match(/Studs.+(4|four)\\sSide/i)) return 'SNOT, 4 sided'\n      break\n    case '7': // Containers\n      if(name.match(/Cupboard/i)) return 'Cupboard'\n      if(name.match(/Drawer/i)) return 'Drawer'\n      break\n    case '27': // Minifig Accessories\n      if(name.match(/Cup/i)) return 'Cup'\n      if(name.match(/Flame/i)) return 'Flame'\n      if(name.match(/Footwear/i)) return 'Footwear'\n      if(name.match(/Gun/i)) return 'Gun'\n      if(name.match(/Pan/i)) return 'Pan'\n      break\n    case '14': // Plates\n      if(name.match(/Corner/i)) return 'Corner'\n      break\n    case '9': // Plates Special\n      if(name.match(/Arm\\sUp/i)) return 'Arm Up'\n      if(name.match(/Bar|Handle/i)) return 'Bar'\n      if(name.match(/Bracket.+Inverted/i)) return 'Bracket Inverted'\n      if(name.match(/Bracket.+Pin.+Bottom/i)) return 'Bracket Pin Bottom'\n      if(name.match(/Bracket.+Vertical.+Studs/i)) return 'Bracket Vertical Studs'\n      if(name.match(/Bracket/i)) return 'Bracket'\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Cutout/i)) return 'Cutout'\n      if(name.match(/Hole/i)) return 'Hole'\n      if(name.match(/Jumper/i) && name.match(/Round/i)) return 'Jumper Round'\n      if(name.match(/Jumper/i)) return 'Jumper'\n      if(name.match(/Ladder/i)) return 'Ladder'\n      if(name.match(/pin\\sHole\\s(on\\s)Top/i)) return 'Pin Hole Top'\n      if(name.match(/Pin\\sHole/i)) return 'Pin Hole'\n      if(name.match(/Rail/i)) return 'Rail'\n      if(name.match(/1.?x.?4\\swith\\s2\\sStuds|Studs.+on.+edges/i)) return 'Studs on Edges'\n      if(name.match(/Tooth/i)) return 'Tooth'\n      if(name.match(/Towball/i)) return 'Towball'\n      break\n    case '21': // Plates Round Curved and Dishes\n      if(name.match(/Corner/i)) return 'Corner'\n      if(name.match(/Boat\\sStud/i)) return 'Boat Stud'\n      if(name.match(/Radar/i)) return 'Radar'\n      break\n    case '31': // String, Bands and Reels\n      if(name.match(/Chain/i)) return 'Chain'\n      if(name.match(/String.+Studs.+Grip/i)) return 'Studded String with Grips'\n      break\n    case '51': // Technic beams\n      if(name.match(/Thin/i)) return 'Thin'\n      break\n    case '15': // Tiles Special\n      if(name.match(/Clip/i)) return 'Clip'\n      if(name.match(/Grille/i)) return 'Grille'\n      if(name.match(/Gold\\sBar/i)) return 'Gold Bar'\n      if(name.match(/Inverted/i)) return 'Inverted' // must go before hole\n      if(name.match(/Hole/i)) return 'Hole'\n      if(name.match(/Hollow\\sBar/i)) return 'Hollow Bar'\n      break\n    case '67': // Tiles Round and Curved\n      if(name.match(/Half\\sCircle/i)) return 'Half Circle'\n      if(name.match(/Macaroni/i)) return 'Macaroni'\n      if(name.match(/Quarter/i)) return 'Quarter'\n      break\n  }\n  return ''\n}\n\nconst parts = (partsData as PartData[]).reduce(\n  (acc: {[key: string]: Part}, partData: PartData) => {\n    const size = partData.name.match(sizeRegex),\n          width = size ? parseInt(size[1].padStart(2) < size[2].padStart(2) ? size[1] : size[2]) : 0,\n          length = size ? parseInt((size[1].padStart(2) > size[2].padStart(2) ? size[1] : size[2])) : 0,\n          heightParsed = parseInt(size ? size[4] : ''),\n          height = isNaN(heightParsed) ? 0 : heightParsed\n    acc[partData.partNum] = {\n      ...partData,\n      nameSort: partData.name\n        .replace(sizeRegex, '  ')\n        .replace(/with|w\\//, ''),\n      width,\n      length,\n      height,\n      category: getPartCategory(partData.partCatId),\n      subCategory: getSubCategory(partData),\n      colors: []\n    } as Part\n    return acc\n  },\n  {}\n)\n\nexport const partsList = Object.keys(parts).map(partNum => parts[partNum])\n\nexport default parts\n\nexport const getPart = (partNum: string) =>\n  parts[partNum] || {\n    partNum: '-1',\n    name: 'unknown part',\n    partCatId: '',\n    partMaterial: '',\n    nameSort: '',\n    width: 0,\n    length: 0,\n    height: 0,\n    category: {},\n    subCategory: '',\n    colors: []\n  }\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport React from 'react'\nimport {FontAwesome} from '@expo/vector-icons'\nimport {Text as DefaultText, TouchableOpacity, View as DefaultView, TextInput as DefaultTextInput} from 'react-native'\nimport {Picker as DefaultPicker, PickerProps} from '@react-native-picker/picker'\n\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme'\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme()\n  const colorFromProps = props[theme]\n\n  if(colorFromProps) {\n    return colorFromProps\n  } else {\n    return Colors[theme][colorName]\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const {style, lightColor, darkColor, ...otherProps} = props\n  const color = useThemeColor({light: lightColor, dark: darkColor}, 'text')\n\n  return <DefaultText style={[{color}, style]} {...otherProps} />\n}\n\ntype DefaultTextInputProps = React.ComponentProps<typeof DefaultTextInput>\ninterface TextInputProps extends DefaultTextInputProps {\n  label?: string;\n}\n\nexport function TextInput(props: TextInputProps) {\n  const {style, ...otherProps} = props\n  const backgroundColor = useThemeColor({}, 'background')\n  const color = useThemeColor({}, 'text')\n\n  return <View style={[{\n    flex: 1,\n    flexDirection: 'row',\n    flexGrow: 1,\n    position: 'relative',\n    paddingTop: 8\n  },\n  props.style]}>\n    {props.label && <Text style={{\n      position: 'absolute',\n      top: 0,\n      left: 6,\n      zIndex: 100,\n      paddingHorizontal: 4,\n      backgroundColor,\n      fontSize: 12\n    }}>\n      {props.label}\n    </Text>\n    }\n    <DefaultTextInput style={[{\n      backgroundColor,\n      borderWidth: 1,\n      borderColor: color,\n      borderRadius: 4,\n      color,\n      padding: 10,\n      flexGrow: 1\n    },\n    style]} {...otherProps} />\n  </View>\n}\n\nexport function View(props: ViewProps) {\n  const {style, lightColor, darkColor, ...otherProps} = props\n  const backgroundColor = useThemeColor({light: lightColor, dark: darkColor}, 'background')\n\n  return <DefaultView style={[{backgroundColor}, style]} {...otherProps} />\n}\n\nexport function Picker(props: PickerProps) {\n  const {style, ...otherProps} = props\n  const backgroundColor = useThemeColor({}, 'background')\n  const color = useThemeColor({}, 'text')\n\n  return <View style={[{\n    flex: 1,\n    flexDirection: 'row',\n    flexGrow: 1,\n    position: 'relative'\n  },\n  props.style]}>\n    <View style={{\n      borderColor: color,\n      borderWidth: 1,\n      borderRadius: 4,\n      flexGrow: 1,\n      flexDirection: 'row'\n    }}>\n      {props.label && <Text style={{\n        position: 'absolute',\n        top: -8,\n        left: 4,\n        zIndex: 100,\n        paddingHorizontal: 4,\n        backgroundColor,\n        fontSize: 12\n      }}>\n        {props.label}\n      </Text>}\n      <DefaultPicker\n        style={{\n          color,\n          flexGrow: 1,\n          borderStyle: 'none',\n          backgroundColor,\n          padding: 10\n        }} {...otherProps}\n        dropdownIconColor={color} />\n    </View>\n  </View>\n}\n\nPicker.Item = DefaultPicker.Item\n\ntype PaginatorProps = {\n  selectedValue: number,\n  onPageChange: Function,\n  onPageSizeChange: Function,\n  numItems: number,\n  pageSize: number\n}\n\nexport const Paginator = (props: PaginatorProps) => {\n  const numPages = Math.ceil(props.numItems/props.pageSize),\n        pickerItems = []\n  for (let i = 0; i < numPages; i++)\n    pickerItems.push(\n      <Picker.Item key={i} label={(i + 1).toString()} value={i} />\n    )\n  return <View style={{\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexGrow: 1\n  }}>\n    <Picker\n      prompt=\"Show\"\n      label=\"Show\"\n      selectedValue={props.pageSize}\n      onValueChange={(num: number) => {\n        props.onPageChange(0)\n        props.onPageSizeChange(num)\n      }}\n      style={{marginRight: props.selectedValue == 0 ? 0 : 20}}>\n      <Picker.Item label=\"10 per page\" value={10} />\n      <Picker.Item label=\"25 per page\" value={25} />\n      <Picker.Item label=\"50 per page\" value={50} />\n      <Picker.Item label=\"100 per page\" value={100} />\n    </Picker>\n    {numPages > 1\n      ? <>\n        <TouchableOpacity\n          style={{height: props.selectedValue == 0 ? 0 : 'auto'}}\n          onPress={() =>\n            props.onPageChange(props.selectedValue == 0 ? 0 : props.selectedValue - 1)\n          }>\n          <Icon name=\"chevron-left\" style={{marginRight: 20}} />\n        </TouchableOpacity>\n        <Picker\n          selectedValue={props.selectedValue}\n          onValueChange={props.onPageChange}\n          label=\"Current Page\">\n          {pickerItems}\n        </Picker>\n        <TouchableOpacity\n          style={{height: props.selectedValue == numPages - 1 ? 0 : 'auto'}}\n          onPress={() =>\n            props.onPageChange(props.selectedValue + 1)\n          }>\n          <Icon name=\"chevron-right\" style={{marginLeft: 20}} />\n        </TouchableOpacity>\n      </>\n      : null\n    }\n  </View>\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nexport function Icon(props: any) {\n  const color = useThemeColor({}, 'text')\n  return <FontAwesome size={30}  {...props} style={{color, ...props.style}}/>\n}\n","import sortBy from 'sort-by'\nimport categoriesData from './raw/part_categories.json'\n\ntype PartCategoryData = {\n  id: string,\n  name: string\n}\n\nexport type PartCategory = {\n  id: string,\n  name: string\n}\n\nconst partCategoriesListUnsorted : PartCategory[] = []\n\nconst partCategories : {[key:string]: PartCategory} = (categoriesData as PartCategoryData[])\n  .reduce((acc: {[key: string]: PartCategory}, categoryData: PartCategoryData) => {\n    acc[categoryData.id] = categoryData as PartCategory\n    partCategoriesListUnsorted.push(acc[categoryData.id])\n    return acc\n  }, {})\n\nexport default partCategories\n\nexport const partCategoriesList = partCategoriesListUnsorted.sort(sortBy('name'))\n\nexport const getPartCategory = (id: string) =>\n  partCategories[id] || {\n    id: '-1',\n    name: 'unknown'\n  }\n","import * as React from 'react'\nimport {View, Switch as DefaultSwitch, SwitchProps as DefaultSwitchProps} from 'react-native'\nimport {Text} from './Themed'\n\ninterface SwitchProps extends DefaultSwitchProps {\n  label: string\n}\n\nconst Switch = (props: SwitchProps) => {\n  return <View style={{flex: 1, flexDirection: 'row', marginTop: 10}}>\n    <Text style={{textAlign: 'right', position: 'relative', top: 2}}>{props.label}</Text>\n    <DefaultSwitch\n      onValueChange={props.onValueChange}\n      trackColor={{false: '#767577', true: '#81b0ff'}}\n      thumbColor={props.value ? '#30D5C8' : '#f4f3f4'}\n      ios_backgroundColor=\"#3e3e3e\"\n      value={props.value}\n    />\n  </View>\n}\n\nexport default Switch\n","import React, {useEffect, useState} from 'react'\nimport {Image as DefaultImage} from 'react-native'\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme'\n\ntype DefaultImageProps = React.ComponentProps<typeof DefaultImage>\ninterface ImageProps extends DefaultImageProps {\n  source: {uri: string},\n  maxWidth?: number,\n  maxHeight?: number\n}\n\nconst ScaledImage = (props: ImageProps) => {\n  const {style, ...otherProps} = props,\n        [[width, height], setImageSize] = useState([props.width || 100, props.height || 100])\n  useEffect(() => {\n    DefaultImage.getSize(props.source.uri, (w, h) => {\n      if(props.width && !props.height) {\n        const newWidth = Math.min(props.width, props.maxWidth || Number.POSITIVE_INFINITY)\n        setImageSize([newWidth, h * (newWidth / w)])\n      } else if(!props.width && props.height) {\n        const newHeight = Math.min(props.height, props.maxHeight || Number.POSITIVE_INFINITY)\n        setImageSize([w * (newHeight / h), newHeight])\n      }\n    })\n  }, [])\n  return <DefaultImage style={[{\n    backgroundColor: Colors[useColorScheme()].background,\n    width,\n    height\n  },\n  style]} {...otherProps} />\n}\n\nexport default ScaledImage\n","import themesData from './raw/themes.json'\n\ntype ThemeData = {\n  id: string\n  name: string\n  parentId: string\n  numSets: number\n  yearFrom: number\n  yearTo: number\n}\n\nexport type Theme = {\n  id: string\n  name: string\n  parentId: string\n  numSets: number\n  yearFrom: number\n  yearTo: number\n}\n\nexport const themesList: Theme[] = (themesData as ThemeData[])\n\nexport default themesList.reduce((acc, theme: Theme) => {\n  return Object.assign(acc, {[theme.id]: theme})\n}, {} as {[key: string]: Theme})\n","import React from 'react'\nimport BaseSpinner from 'react-native-loading-spinner-overlay'\nimport useColorScheme from '../hooks/useColorScheme'\nimport Colors from '../constants/Colors'\n\nconst Spinner = ({visible, textContent = 'Loading ...'}: {visible: boolean, textContent?: string}) => {\n  const theme = useColorScheme(),\n        color = Colors[theme].text\n  return <BaseSpinner\n    visible={visible}\n    textContent={textContent}\n    color={color}\n    overlayColor=\"rgba(0,0,0,.8)\"\n    textStyle={{color}} />\n}\n\nexport default Spinner\n","import React from 'react'\nimport {Platform, View} from 'react-native'\nimport TextLink from './TextLink'\nimport {Text} from './Themed'\n\nconst RequireAPISupport = ({children}: {children: JSX.Element[] | JSX.Element}) => {\n  return <View>\n    {Platform.OS === 'web'\n      ? <Text>\n        Unfortunately API calls to sites like{' '}\n        <TextLink url=\"https://www.brickset.com\">Brickset</TextLink>\n        {' '}and{' '}\n        <TextLink url=\"https://www.rebrickable.com\">Rebrickable</TextLink>{' '}\n        do not work on the web platform at this time. Why not try the{' '}\n        <TextLink url=\"https://github.com/JeromeDane/brick-tools-for-lego#platforms--installation\">\n          Android version\n        </TextLink>{' '}\n        instead?\n      </Text>\n      : children\n    }\n  </View>\n}\n\nexport default RequireAPISupport\n","import inventoryPartsData from './raw/inventory_parts.json'\nimport {getPart, Part} from './parts'\nimport type {Color} from './colors'\nimport colors from './colors'\nimport {getElementByPartAndColor, Element} from './elements'\n\ntype InventoryPartData = {\n  p: string, // partNum\n  c: string, // string\n  q: number, // quantity\n  s: number // isSpare\n}\n\nexport type InventoryPart = {\n  part: Part,\n  color: Color,\n  quantity: number,\n  isSpare: boolean,\n  element: Element\n}\n\nconst data = inventoryPartsData as {[key: string]: InventoryPartData[]}\n\nexport default Object.keys(data).reduce((acc: {[id: string]: InventoryPart[]}, id: string) => {\n  acc[id] = data[id].map(inventoryPartData => ({\n    part: getPart(inventoryPartData.p),\n    color: colors[inventoryPartData.c],\n    quantity: inventoryPartData.q,\n    isSpare: inventoryPartData.s == 1,\n    element: getElementByPartAndColor(inventoryPartData.p, inventoryPartData.c)\n  }) as InventoryPart)\n  return acc\n}, {})\n","import 'react-native-gesture-handler'\nimport {registerRootComponent} from 'expo'\n\nimport App from './src/App'\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App)\n","import React, {useContext, createContext, useEffect, useState} from 'react'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport Constants from 'expo-constants'\nimport formUrlEncode from 'form-urlencoded'\nimport {Set} from '../data/sets'\n\nconst apiKey = Constants.manifest.extra.BRICKSET_API_KEY\n\ntype CollectionItem = {\n  owned: boolean;\n  wanted: boolean;\n  qtyOwned: number;\n  rating: number;\n  notes: string;\n}\n\nexport type Collection = {[key: string]: CollectionItem}\nlet storageRead = false\n\nconst ApiContext = createContext({\n  isLoggedIn: false,\n  collection: {} as Collection,\n  sets: {} as {[key: string]: Set},\n  setsList: [] as Set[],\n  setWanted: async ({bricksetID, setNum}: Set, wanted: boolean) => {},\n  setOwned: async ({bricksetID, setNum}: Set, qtyOwned: number) => {}\n})\n\n// Note: Normally I hate mutable variables, but I'll make an exception\n// here so that we don't get into a race condition with `useState` hooks\nlet userHash = ''\n\nexport const BricksetApiContext = ({children}: {children: JSX.Element[] | JSX.Element}) => {\n  const BRICKSET_KEYS = {\n          userHash: 'bricktools-brickset-user-hash',\n          ownedSets: 'bricktools-brickset-owned-set-numbers'\n        },\n        [isLoggedIn, setIsLoggedIn] = useState(false),\n        [collection, setCollection] = useState({} as Collection),\n        saveCollection = async (updatedCollection: Collection) => {\n          setCollection(Object.assign({}, updatedCollection))\n          await AsyncStorage.setItem(BRICKSET_KEYS.ownedSets, JSON.stringify(updatedCollection))\n        },\n        api = (method: string, data: any) => {\n          return new Promise((resolve, reject) =>\n            fetch('https://brickset.com/api/v3.asmx/' + method, {\n              method: 'POST',\n              mode: 'cors',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n              },\n              body: formUrlEncode(Object.assign({apiKey},\n                userHash ? Object.assign({}, data, {userHash}) : data\n              ))\n            })\n              .then(async response => {\n                const text = await response.text() || '{error: \"No response body\"}'\n                // console.log(text)\n                try {\n                  resolve(JSON.parse(text))\n                } catch(e) {\n                  console.warn(e)\n                  console.warn(text)\n                  reject(e)\n                }\n              })\n              .catch(e => {\n                console.log('ERROR: API request failed')\n                console.log(e)\n                reject(e)\n              })\n          )\n        },\n        login = (username: string, password: string) =>\n          new Promise((resolve, reject) =>\n            api('login', {username, password})\n              .then(async (response: any) => {\n                if(response.status === 'success') {\n                  userHash = response.hash\n                  setIsLoggedIn(true)\n                  await AsyncStorage.setItem(BRICKSET_KEYS.userHash, response.hash)\n                  resolve(null)\n                }\n                else {\n                  // TODO: Add error handling\n                  console.error('Error logging in to Brickset')\n                  console.warn(JSON.stringify(response, null, 2))\n                  reject(null)\n                }\n              })\n          ),\n        logOut = async () => {\n          await AsyncStorage.setItem(BRICKSET_KEYS.userHash, '')\n          setIsLoggedIn(false)\n        },\n        loadCollection = async () => {\n          console.log('loading collection')\n          const parseCollection = async (result: any) => {\n            if(result.status === 'success') {\n              const setsData = result.sets.reduce((acc: {[key: string]: any}, set: any) => {\n                acc[set.number + '-' + set.numberVariant] = set.collection\n                return acc\n              }, {} as {[key: string]: any})\n              return setsData\n            }\n            else {\n              console.log(JSON.stringify(result, null, 2))\n              return null\n            }\n          }\n          const ownedResult = await api('getSets', {params: JSON.stringify({owned: 1, pageSize: 500})})\n            .then(parseCollection)\n          console.log(`Found ${Object.keys(ownedResult).length} owned sets`)\n          const wantedResult = await api('getSets', {params: JSON.stringify({wanted: 1, pageSize: 500})})\n            .then(parseCollection)\n          console.log(`Found ${Object.keys(wantedResult).length} wanted sets`)\n          saveCollection(Object.keys(wantedResult).reduce((acc, setNum) => {\n            if(acc[setNum]) acc[setNum].wanted = true\n            else acc[setNum] = wantedResult[setNum]\n            return acc\n          }, Object.assign({}, ownedResult)))\n          return null\n        },\n        setWanted = async ({bricksetID, setNum}: Set, wanted: boolean) =>\n          api('setCollection', {\n            SetID: bricksetID,\n            params: JSON.stringify({want: wanted ? 1 : 0})\n          })\n            .then((response : any) => {\n              if(response.status == 'success') {\n                collection[setNum] = collection[setNum] || {\n                  owned: false,\n                  wanted: false,\n                  qtyOwned: 0,\n                  rating: 0,\n                  notes: ''\n                }\n                collection[setNum].wanted = wanted\n                console.log(`setting ${setNum} as wanted: ${wanted}`)\n                saveCollection(collection)\n              }\n            }),\n        setOwned = async ({bricksetID, setNum}: Set, qtyOwned: number) =>\n          api('setCollection', {\n            SetID: bricksetID,\n            params: JSON.stringify({qtyOwned, owned: qtyOwned > 0 ? 1 : 0})\n          })\n            .then((response : any) => {\n              if(response.status == 'success') {\n                collection[setNum] = collection[setNum] || {\n                  owned: false,\n                  wanted: false,\n                  qtyOwned: 0,\n                  rating: 0,\n                  notes: ''\n                }\n                collection[setNum].qtyOwned = qtyOwned\n                collection[setNum].owned = qtyOwned > 0\n                console.log(`setting ${setNum} as owned: ${qtyOwned}`)\n                saveCollection(collection)\n              }\n            })\n  useEffect(() => {\n    if(!storageRead) {\n      storageRead = true\n      AsyncStorage.getItem(BRICKSET_KEYS.userHash)\n        .then(hash => {\n          setIsLoggedIn(Boolean(hash))\n          userHash = hash || ''\n        })\n      AsyncStorage.getItem(BRICKSET_KEYS.ownedSets)\n        .then(result => setCollection(JSON.parse(result || '{}')))\n    }\n  }, [])\n  return <ApiContext.Provider value={{\n    isLoggedIn,\n    login,\n    logOut,\n    loadCollection,\n    collection,\n    setWanted,\n    setOwned,\n    api\n  }}>\n    {children}\n  </ApiContext.Provider>\n}\n\nexport const useApi = () => useContext(ApiContext).api\nexport const useCollection = () => useContext(ApiContext).collection\nexport const useLogin = () => useContext(ApiContext).login\nexport const useLogOut = () => useContext(ApiContext).logOut\nexport const useIsLoggedIn = () => useContext(ApiContext).isLoggedIn\nexport const useLoadCollection = () => useContext(ApiContext).loadCollection\nexport const useSetWanted = () => useContext(ApiContext).setWanted\nexport const useSetOwned = () => useContext(ApiContext).setOwned\n","import {StatusBar} from 'expo-status-bar'\nimport React from 'react'\nimport {SafeAreaProvider} from 'react-native-safe-area-context'\nimport {BricksetApiContext} from './api/brickset'\n\nimport useCachedResources from './hooks/useCachedResources'\nimport useColorScheme from './hooks/useColorScheme'\nimport Navigation from './navigation/Navigation'\n\nrequire('intl')\nrequire('intl/locale-data/jsonp/en.js')\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources()\n  const colorScheme = useColorScheme()\n\n  if(!isLoadingComplete) {\n    return null\n  } else {\n    return (\n      <SafeAreaProvider>\n        <BricksetApiContext>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </BricksetApiContext>\n      </SafeAreaProvider>\n    )\n  }\n}\n","import {FontAwesome} from '@expo/vector-icons'\nimport * as Font from 'expo-font'\nimport * as SplashScreen from 'expo-splash-screen'\nimport * as React from 'react'\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false)\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync()\n\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf')\n        })\n      } catch(e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e)\n      } finally {\n        setLoadingComplete(true)\n        SplashScreen.hideAsync()\n      }\n    }\n\n    loadResourcesAndDataAsync()\n  }, [])\n\n  return isLoadingComplete\n}\n","import {ColorSchemeName, useColorScheme as _useColorScheme} from 'react-native'\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\n// import 'react-native-gesture-handler'\nimport {\n  AntDesign,\n  FontAwesome,\n  MaterialIcons,\n  MaterialCommunityIcons\n} from '@expo/vector-icons'\nimport {NavigationContainer, DefaultTheme, DarkTheme} from '@react-navigation/native'\nimport {createDrawerNavigator, DrawerItemList, DrawerContentScrollView} from '@react-navigation/drawer'\nimport {createNativeStackNavigator} from '@react-navigation/native-stack'\nimport * as React from 'react'\nimport {ColorSchemeName, Pressable} from 'react-native'\nimport {Text} from '../components/Themed'\nimport Colors from '../constants/Colors'\nimport useColorScheme from '../hooks/useColorScheme'\nimport AboutScreen from '../screens/AboutScreen'\nimport NotFoundScreen from '../screens/NotFoundScreen'\nimport ElementScreen from '../screens/Element'\nimport ThemesScreen from '../screens/Themes'\nimport PartsScreen from '../screens/Parts'\nimport SetsScreen from '../screens/Sets'\nimport SettingsScreen from '../screens/Settings'\nimport {RootStackParamList, RootDrawerParamList} from './types'\nimport linking from './linking'\nimport SetTabs from './SetTabs'\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>(),\n      Drawer = createDrawerNavigator<RootDrawerParamList>()\n\n\nexport default function Navigation({colorScheme}: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={linking}\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ?? route?.name} - Brick Tools for LEGO®`\n      }}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Root\" component={DrawerNav} options={{headerShown: false}} />\n        <Stack.Screen name=\"Element\" component={ElementScreen} />\n        <Stack.Screen name=\"Set\" component={SetTabs} />\n        <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{title: 'Oops!'}} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst MenuButton = ({navigation}: any) => {\n  const colorScheme = useColorScheme()\n  return <Pressable\n    onPress={() => navigation.toggleDrawer()}\n    style={({pressed}) => ({opacity: pressed ? 0.5 : 1})}>\n    <MaterialIcons\n      name=\"menu\"\n      size={25}\n      style={{marginLeft: 20}}\n      color={Colors[colorScheme].text}\n    />\n  </Pressable>\n}\n\nconst DrawerContent = (props: any) => {\n  return (\n    <DrawerContentScrollView {...props}>\n      <Text style={{padding: 20, fontWeight: 'bold'}}>Brick Tools for LEGO®</Text>\n      <DrawerItemList {...props} />\n    </DrawerContentScrollView>\n  )\n}\n\nconst DrawerNav = () => {\n  return <Drawer.Navigator initialRouteName=\"Sets\" drawerContent={(props) => <DrawerContent {...props} />}>\n    <Drawer.Screen\n      name=\"Sets\"\n      component={SetsScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <FontAwesome name=\"cubes\" size={20} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"Themes\"\n      component={ThemesScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <AntDesign name=\"picture\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"Parts\"\n      component={PartsScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <MaterialCommunityIcons name=\"puzzle\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"Settings\"\n      component={SettingsScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <FontAwesome name=\"gear\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n    <Drawer.Screen\n      name=\"About\"\n      component={AboutScreen}\n      options={({navigation}) => ({\n        drawerIcon: ({color}) => <AntDesign name=\"infocirlce\" size={25} color={color} />,\n        headerLeft: () => <MenuButton {...{navigation}} />\n      })} />\n  </Drawer.Navigator>\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\n","import * as React from 'react'\nimport {Linking} from 'react-native'\n\nimport {Text, TextProps} from './Themed'\n\ninterface TextLinkProps extends TextProps {\n  url?: string\n}\n\nconst TextLink = (props: TextLinkProps) => {\n  return <Text\n    {...Object.assign({}, props,\n      props.url ? {onPress: () => Linking.openURL(props.url!)} : {}\n    )}\n    style={[props.style, {color: '#2e78b7'}]} />\n}\n\nexport default TextLink\n","import {useEffect, useState} from 'react'\nimport {useCollection} from '../api/brickset'\nimport setsData from './raw/sets.json'\nimport bricksetSets from './brickset/sets.json'\nimport themes, {Theme} from './themes'\n\ntype SetData = {\n  setNum: string;\n  name: string;\n  year: number;\n  themeId: string,\n  numParts: number,\n  setNumSort: number,\n  inventories: {\n    id: string,\n    version: string\n  }[]\n}\n\ntype LEGOComPrice = {\n  retailPrice?: number;\n  dateFirstAvailable?: string,\n  dateLastAvailable?: string\n}\n\nexport type Set = {\n  setNum: string;\n  name: string;\n  year: number;\n  theme: Theme;\n  numParts: number;\n  setNumSort: number;\n  inventories: {\n    id: string;\n    version: string;\n  }[]\n  LEGOCom: {\n    US: LEGOComPrice;\n    UK: LEGOComPrice;\n    CA: LEGOComPrice;\n    DE: LEGOComPrice;\n  }\n  ownedBy: number\n  wantedBy: number\n  image: {\n    imageURL: string\n    thumbnailURL: string\n  }\n  collection: {\n    owned: boolean\n    wanted: boolean\n    qtyOwned: number\n    rating: number\n    notes: string\n  }\n  bricksetID: number\n}\n\nconst emptyLEGOCom = {\n  retailPrice: 0,\n  dateFirstAvailable: '',\n  dateLastAvailable: ''\n}\n\nexport const useSets = () => {\n  const collection = useCollection(),\n        [sets, setSets] = useState({\n          byId: {} as {[key: string]: Set},\n          list: [] as Set[]\n        })\n  useEffect(() => {\n    const list : Set[] = (setsData as SetData[]).map(setData => {\n      const bricksetSet = bricksetSets[setData.setNum],\n            myCollection = collection[setData.setNum]\n      return {\n        setNum: setData.setNum,\n        name: setData.name,\n        year: setData.year,\n        theme: themes[setData.themeId],\n        numParts: setData.numParts,\n        setNumSort: setData.setNumSort,\n        inventories: setData.inventories,\n        LEGOCom: bricksetSet ? bricksetSet.LEGOCom : {\n          US: emptyLEGOCom,\n          UK: emptyLEGOCom,\n          CA: emptyLEGOCom,\n          DE: emptyLEGOCom\n        },\n        ownedBy: bricksetSet ? (bricksetSet.collections.ownedBy || 0) : 0,\n        wantedBy: bricksetSet ? (bricksetSet.collections.wantedBy || 0) : 0,\n        image: {\n          imageURL: (bricksetSet && bricksetSet.image && bricksetSet.imageURL) || `https://images.brickset.com/sets/images/${setData.setNum}.jpg`,\n          thumbnailURL: (bricksetSet && bricksetSet.image && bricksetSet.thumbnailURL) || `https://images.brickset.com/sets/images/${setData.setNum}.jpg`\n        },\n        collection: {\n          owned: myCollection ? myCollection.owned : false,\n          wanted: myCollection ? myCollection.wanted : false,\n          qtyOwned: myCollection ? myCollection.qtyOwned : 0,\n          rating: myCollection ? myCollection.rating : 0,\n          notes: myCollection ? myCollection.notes : ''\n        },\n        bricksetID: bricksetSet ? bricksetSet.setID : -1\n      }\n    })\n    setSets({\n      byId: list.reduce((acc, set: Set) => {\n        return Object.assign(acc, {[set.setNum]: set})\n      }, {} as {[key: string]: Set}),\n      list\n    })\n  }, [collection])\n  return sets\n}\n","import * as React from 'react'\nimport {StyleSheet, Linking, Button, ScrollView} from 'react-native'\nimport {Text, View} from '../components/Themed'\nimport TextLink from '../components/TextLink'\nimport {version} from '../../package.json'\n\nexport default function AboutScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.paragraph}>\n        This project is free, open source, and maintained by volunteers out of a love of all things LEGO®.{' '}\n        If you&apos;d like to get involved in any way, check out this project&apos;s{' '}\n        <TextLink url=\"https://github.com/JeromeDane/brick-tools-for-lego\">\n          GitHub page\n        </TextLink>.\n      </Text>\n      <TextLink style={styles.paragraph} url=\"https://github.com/JeromeDane/brick-tools-for-lego/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement\">\n        Planned features\n      </TextLink>\n      <TextLink style={styles.paragraph} url=\"https://github.com/JeromeDane/brick-tools-for-lego/issues?q=is%3Aopen+is%3Aissue+label%3Abug\">\n        Known bugs\n      </TextLink>\n      <TextLink style={styles.paragraph} url=\"https://twitter.com/BrickTools4LEGO\">\n        @BrickTools4LEGO on Twitter\n      </TextLink>\n      <TextLink style={styles.paragraph} url=\"https://www.reddit.com/r/BrickToolsForLEGO/\">\n        Reddit community: r/BrickToolsForLEGO/\n      </TextLink>\n      <Text style={styles.paragraph}>\n        Show your ❤️ for this project:\n      </Text>\n      <View style={styles.paragraph}>\n        <Button\n          title=\"Make a donation\"\n          onPress={() => Linking.openURL('https://www.paypal.com/donate?hosted_button_id=LWSCPL34NZ6LJ')} />\n      </View>\n      <Text style={styles.paragraph}>\n        Author:{' '}\n        <TextLink url=\"https://www.linkedin.com/in/JeromeDane/\">\n          Jerome Dane\n        </TextLink>\n      </Text>\n      <Text style={styles.paragraph}>Version {version}</Text>\n      <Text style={styles.paragraph}>\n        Powered by data from{' '}\n        <TextLink url=\"https://www.brickset.com/\">Brickset.com</TextLink>\n        {' '}and{' '}\n        <TextLink url=\"https://www.rebrickable.com/\">Rebrickable.com</TextLink>\n      </Text>\n      <Text style={styles.paragraph}>LEGO® is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this project.</Text>\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  linkText: {\n    color: '#2e78b7'\n  },\n  paragraph: {\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n})\n","import * as React from 'react'\nimport {StyleSheet, TouchableOpacity} from 'react-native'\nimport {Text, View} from '../components/Themed'\n\nimport {RootStackScreenProps} from '../navigation/types'\n\nexport default function NotFoundScreen({navigation}: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn&apos;t exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n})\n","import React, {useEffect} from 'react'\nimport {ScrollView, Image, Button, Linking} from 'react-native'\nimport {RootStackScreenProps} from '../navigation/types'\nimport {Text, View} from '../components/Themed'\nimport {elements} from '../data/elements'\nimport colors from '../data/colors'\n\nexport default function Element({navigation}: RootStackScreenProps<'Element'>) {\n  const {routes, index} = navigation.getState(),\n        element = elements[routes[index].params.id],\n        {id, part, color} = element\n  useEffect(() => {\n    navigation.setOptions({\n      title: `${part.name} (${color.name})`\n    })\n  }, [element])\n  return (\n    <View>\n      <ScrollView style={{padding: 20}}>\n        <Image\n          style={{marginBottom: 20, width: 192, height: 192, backgroundColor: 'gray'}}\n          source={{uri: `https://www.lego.com/cdn/product-assets/element.img.lod5photo.192x192/${id}.jpg`}} />\n        <Text>Element ID: {id}</Text>\n        <Text>Part Number: {part.partNum}</Text>\n        <Text>Name: {part.name}</Text>\n        <Text>Color: {color.name}</Text>\n        <View style={{marginTop: 20}}>\n          <Button title=\"Brickset\" onPress={() =>\n            Linking.openURL(`https://brickset.com/parts/${id}/`)\n          } />\n        </View>\n        <View style={{marginTop: 20}}>\n          <Button title=\"BrickLink\" onPress={() =>\n            Linking.openURL(`https://www.bricklink.com/v2/catalog/catalogitem.page?P=${part.partNum}&idColor=` + colors[color.id].brickLink.id)\n          } />\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n","// https://1.bp.blogspot.com/-aQauElTPaCg/YL_mdg37mqI/AAAAAAAAMQI/kcwwNj-Qr9EYV4HfnNnPJPtZc299246oACLcBGAsYHQ/s1600/Lego%2BColors%2Bpicture.jpg\n\nexport default [\n  'Black', // 0\",\n  'Chrome Black', // 64\",\n  'Speckle Black-Silver', // 132\",\n  'Dark Gray', // 8\",\n  'Dark Bluish Gray', // 72\",\n  'Light Bluish Gray', // 71\",\n  'Light Gray', // 7\",\n  'White', // 15\",\n  'Brown', // 6\",\n  'Tan', // 19\",\n  'Dark Tan', // 28\",\n  'Medium Dark Flesh', // 84\",\n  'Dark Brown', // 308\",\n  'Reddish Brown', // 70\",\n  'Red', // 4\",\n  'Orange', // 25\",\n  'Light Yellow', // 18\",\n  'Pearl Gold', // 297\",\n  'Yellow', // 14\",\n  'Bright Green', // 10\",\n  'Light Green', // 17\",\n  'Lime', // 27\",\n  'Green', // 2\",\n  'Sand Green', // 378\",\n  'Light Turquoise', // 11\",\n  'Dark Turquoise', // 3\",\n  'Light Blue', // 9\",\n  'Dark Azure', // 321\",\n  'Blue', // 1\",\n  'Purple', // 22\",\n  'Pink', // 13\",\n  'Dark Pink', // 5\",\n  'Salmon', // 12\",\n  'Light Violet', // 20\",\n  'Trans-Black', // 40\",\n  'Trans-Black IR Lens', // 32\",\n  'Trans-Clear', // 47\",\n  'Trans-Red', // 36\",\n  'Trans-Neon Orange', // 57\",\n  'Trans-Neon Yellow', // 54\",\n  'Trans-Yellow', // 46\",\n  'Trans-Neon Green', // 42\",\n  'Trans-Bright Green', // 35\",\n  'Trans-Green', // 34\",\n  'Trans-Very Lt Blue', // 43\",\n  'Trans-Light Blue', // 41\",\n  'Trans-Dark Blue', // 33\",\n  'Trans-Dark Pink', // 45\",\n  'Trans-Purple', // 52\",\n\n  'Glow In Dark Opaque', // 21\",\n  'Dark Blue-Violet', // 23\",\n  'Magenta', // 26\",\n  'Bright Pink', // 29\",\n  'Medium Lavender', // 30\",\n  'Lavender', // 31\",\n  'Chrome Antique Brass', // 60\",\n  'Chrome Blue', // 61\",\n  'Chrome Green', // 62\",\n  'Chrome Pink', // 63\",\n  'Very Light Orange', // 68\",\n  'Light Purple', // 69\",\n  'Medium Blue', // 73\",\n  'Medium Green', // 74\",\n  'Speckle Black-Copper', // 75\",\n  'Speckle DBGray-Silver', // 76\",\n  'Light Pink', // 77\",\n  'Light Flesh', // 78\",\n  'Milky White', // 79\",\n  'Metallic Silver', // 80\",\n  'Metallic Green', // 81\",\n  'Metallic Gold', // 82\",\n  'Dark Purple', // 85\",\n  'Dark Flesh', // 86\",\n  'Royal Blue', // 89\",\n  'Flesh', // 92\",\n  'Light Salmon', // 100\",\n  'Violet', // 110\",\n  'Blue-Violet', // 112\",\n  'Glitter Trans-Dark Pink', // 114\",\n  'Medium Lime', // 115\",\n  'Glitter Trans-Clear', // 117\",\n  'Aqua', // 118\",\n  'Light Lime', // 120\",\n  'Light Orange', // 125\",\n  'Glitter Trans-Purple', // 129\",\n  'Speckle Black-Gold', // 133\",\n  'Copper', // 134\",\n  'Pearl Light Gray', // 135\",\n  'Metal Blue', // 137\",\n  'Pearl Light Gold', // 142\",\n  'Trans-Medium Blue', // 143\",\n  'Pearl Dark Gray', // 148\",\n  'Pearl Very Light Gray', // 150\",\n  'Very Light Bluish Gray', // 151\",\n  'Yellowish Green', // 158\",\n  'Flat Dark Gold', // 178\",\n  'Flat Silver', // 179\",\n  'Trans-Orange', // 182\",\n  'Pearl White', // 183\",\n  'Bright Light Orange', // 191\",\n  'Bright Light Blue', // 212\",\n  'Rust', // 216\",\n  'Bright Light Yellow', // 226\",\n  'Trans-Pink', // 230\",\n  'Sky Blue', // 232\",\n  'Trans-Light Purple', // 236\",\n  'Dark Blue', // 272\",\n  'Dark Green', // 288\",\n  'Glow In Dark Trans', // 294\",\n  'Maersk Blue', // 313\",\n  'Dark Red', // 320\",\n  'Medium Azure', // 322\",\n  'Light Aqua', // 323\",\n  'Olive Green', // 326\",\n  'Chrome Gold', // 334\",\n  'Sand Red', // 335\",\n  'Medium Dark Pink', // 351\",\n  'Earth Orange', // 366\",\n  'Sand Purple', // 373\",\n  'Sand Blue', // 379\",\n  'Chrome Silver', // 383\",\n  'Fabuland Brown', // 450\",\n  'Medium Orange', // 462\",\n  'Dark Orange', // 484\",\n  'Very Light Gray', // 503\",\n  'Glow in Dark White', // 1000\",\n  'Medium Violet', // 1001\",\n  'Glitter Trans-Neon Green', // 1002\",\n  'Glitter Trans-Light Blue', // 1003\",\n  'Trans-Flame Yellowish Orange', // 1004\",\n  'Trans-Fire Yellow', // 1005\",\n  'Trans-Light Royal Blue', // 1006\",\n  'Reddish Lilac', // 1007\",\n  'Vintage Blue', // 1008\",\n  'Vintage Green', // 1009\",\n  'Vintage Red', // 1010\",\n  'Vintage Yellow', // 1011\",\n  'Fabuland Orange', // 1012\",\n  'Modulex White', // 1013\",\n  'Modulex Light Bluish Gray', // 1014\",\n  'Modulex Light Gray', // 1015\",\n  'Modulex Charcoal Gray', // 1016\",\n  'Modulex Tile Gray', // 1017\",\n  'Modulex Black', // 1018\",\n  'Modulex Tile Brown', // 1019\",\n  'Modulex Terracotta', // 1020\",\n  'Modulex Brown', // 1021\",\n  'Modulex Buff', // 1022\",\n  'Modulex Red', // 1023\",\n  'Modulex Pink Red', // 1024\",\n  'Modulex Orange', // 1025\",\n  'Modulex Light Orange', // 1026\",\n  'Modulex Light Yellow', // 1027\",\n  'Modulex Ochre Yellow', // 1028\",\n  'Modulex Lemon', // 1029\",\n  'Modulex Pastel Green', // 1030\",\n  'Modulex Olive Green', // 1031\",\n  'Modulex Aqua Green', // 1032\",\n  'Modulex Teal Blue', // 1033\",\n  'Modulex Tile Blue', // 1034\",\n  'Modulex Medium Blue', // 1035\",\n  'Modulex Pastel Blue', // 1036\",\n  'Modulex Violet', // 1037\",\n  'Modulex Pink', // 1038\",\n  'Modulex Clear', // 1039\",\n  'Modulex Foil Dark Gray', // 1040\",\n  'Modulex Foil Light Gray', // 1041\",\n  'Modulex Foil Dark Green', // 1042\",\n  'Modulex Foil Light Green', // 1043\",\n  'Modulex Foil Dark Blue', // 1044\",\n  'Modulex Foil Light Blue', // 1045\",\n  'Modulex Foil Violet', // 1046\",\n  'Modulex Foil Red', // 1047\",\n  'Modulex Foil Yellow', // 1048\",\n  'Modulex Foil Orange', // 1049\",\n  'Coral', // 1050\",\n  'Pastel Blue', // 1051\",\n  'Glitter Trans-Orange', // 1052\",\n  'Trans-Blue Opal', // 1053\",\n  'Trans-Medium Reddish Violet Opal', // 1054\",\n  'Trans-Clear Opal', // 1055\",\n  'Trans-Brown Opal', // 1056\",\n  'Trans-Light Bright Green', // 1057\",\n  'Trans-Light Green', // 1058\",\n  'Trans-Purple Opal', // 1059\",\n  'Trans-Green Opal', // 1060\",\n  'Trans-Dark Blue Opal', // 1061\",\n  'Lemon', // 1062\",\n  '[No Color/Any Color]' // 9999\"\n]\n","import React from 'react'\nimport {ScrollView, StyleSheet} from 'react-native'\nimport sortBy from 'sort-by'\nimport {Text} from '../components/Themed'\nimport themes from '../data/raw/themes.json'\n\nexport default function TabsScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      {themes\n        .filter(({parentId}) => !parentId)\n        .sort(sortBy('name'))\n        .map(theme =>\n          <Text key={theme.id} style={styles.theme}>\n            {theme.name} (\n            {theme.yearFrom ? '' + theme.yearFrom + '' : ''}\n            {theme.yearTo ? '-' + theme.yearTo + '' : ''}\n            {(theme.yearFrom || theme.yearTo) ? ', ' : ''}\n            {theme.numSets} sets)\n          </Text>\n        )\n      }\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  theme: {\n    textAlign: 'left',\n    paddingVertical: 10\n  }\n})\n","import React, {useRef, useState} from 'react'\nimport {ScrollView, StyleSheet, Image} from 'react-native'\nimport sortBy from 'sort-by'\nimport {Paginator, Picker, Text, TextInput, View} from '../components/Themed'\nimport {partsList} from '../data/parts'\nimport {getElementByPartAndColor} from '../data/elements'\nimport {colorsList} from '../data/colors'\nimport {partCategoriesList} from '../data/part-categories'\nimport Switch from '../components/Switch'\n\nconst TabsScreen = () => {\n  const defaultSortOrder = 'category.name,subCategory,width,length,height',\n        [sortOrder, setSortOrder] = useState(defaultSortOrder),\n        [partCategory, setPartCategory] = useState(''),\n        [colorFilter, setColorFilter] = useState(''),\n        [showPrints, setShowPrints] = useState(false),\n        [pageSize, setPageSize] = useState(25),\n        [currentPage, setCurrentPage] = useState(0),\n        [filterBy, setFilterBy] = useState(''),\n        scrollRef = useRef(),\n        filteredPartNumbers = partsList.filter(part => {\n          return (part.colors.length > 0) &&\n                 (!filterBy || (part.partNum + part.name).toLowerCase().match(filterBy.toLowerCase())) &&\n                 (!partCategory || part.category.id == partCategory) &&\n                 (showPrints || !part.partNum.match('pr')) &&\n                 (!colorFilter || part.colors.find(({id}) => id == colorFilter))\n        }),\n        defaultColorId = colorFilter || colorsList[0].id\n  return (\n    <ScrollView ref={scrollRef} style={{\n      paddingBottom: 100,\n      padding: 20,\n      flex: 1,\n      flexGrow: 1\n    }}>\n      <View style={{marginBottom: 20}}>\n        <TextInput\n          label=\"Search Parts\"\n          onChangeText={value => {\n            setCurrentPage(0)\n            setFilterBy(value)\n          }} />\n      </View>\n      <View style={{marginBottom: 20}}>\n        <Picker\n          label=\"Sort by\"\n          selectedValue={sortOrder}\n          onValueChange={value => {\n            setCurrentPage(0)\n            setSortOrder(value)\n          }}>\n          <Picker.Item label=\"Category, size\" value={defaultSortOrder} />\n          <Picker.Item label=\"Size, category\" value={'width,length,height,category.name,subCategory'} />\n          <Picker.Item label=\"Size descending, category\" value={'-width,-length,-height,category.name,subCategory'} />\n        </Picker>\n      </View>\n      <View style={{marginBottom: 20}}>\n        <Picker\n          label=\"Category\"\n          selectedValue={partCategory}\n          onValueChange={value => {\n            setCurrentPage(0)\n            setPartCategory(value)\n          }}>\n          <Picker.Item label=\"All categories\" value=\"\" />\n          {partCategoriesList.map(({id, name}, i) =>\n            <Picker.Item label={name} value={id} key={i} />\n          )}\n        </Picker>\n      </View>\n      <View style={{marginBottom: 20}}>\n        <Picker\n          label=\"Color\"\n          selectedValue={colorFilter}\n          onValueChange={value => {\n            setCurrentPage(0)\n            setColorFilter(value)\n          }}>\n          <Picker.Item label=\"All available colors\" value=\"\" />\n          {colorsList.map(({id, name}, i) =>\n            <Picker.Item label={name} value={id} key={i} />\n          )}\n        </Picker>\n      </View>\n      <View style={{marginBottom: 20}}>\n        <View style={{alignItems: 'flex-end'}}>\n          <Switch\n            label=\"Show printed parts\"\n            onValueChange={setShowPrints}\n            value={showPrints} />\n        </View>\n      </View>\n      {filteredPartNumbers.length\n        ? filteredPartNumbers\n          .sort(sortBy.apply(sortBy, sortOrder.split(',')))\n          .slice(currentPage * pageSize, currentPage * pageSize + pageSize)\n          .map((part, i: number) => {\n            const defaultColor = part.colors.find(({id}) => id == defaultColorId) || part.colors[0],\n                  element = defaultColor && getElementByPartAndColor(part.partNum, defaultColor.id)\n            return <View style={styles.part} key={i}>\n              {element &&\n                <Image\n                  style={{marginRight: 10, width: 100, height: 100, backgroundColor: 'gray'}}\n                  source={{uri: `https://www.lego.com/cdn/product-assets/element.img.lod5photo.192x192/${element.id}.jpg`}} />\n              }\n              <View>\n                <Text>{part.category.name}{part.subCategory ? ', ' + part.subCategory : ''}</Text>\n                <Text>{part.name}</Text>\n                <Text>Part Number: {part.partNum}</Text>\n                <Text>Colors: {part.colors.length}</Text>\n              </View>\n            </View>\n          })\n        : <Text style={{paddingVertical: 20}}>No parts found matching your criteria.</Text>\n      }\n      <View style={{paddingTop: 20}}>\n        <Paginator\n          pageSize={pageSize}\n          numItems={filteredPartNumbers.length}\n          onPageSizeChange={setPageSize}\n          onPageChange={(val : number) => {\n            scrollRef.current?.scrollTo({y: 0, animated: true})\n            setCurrentPage(val)\n          }}\n          selectedValue={currentPage} />\n      </View>\n    </ScrollView>\n  )\n}\n\nexport default TabsScreen\n\nconst styles = StyleSheet.create({\n  part: {\n    flex: 1,\n    flexDirection: 'row',\n    textAlign: 'left',\n    paddingVertical: 10,\n    paddingRight: 20,\n    flexGrow: 1\n  },\n  image: {\n    backgroundColor: 'gray',\n    marginRight: 10\n  }\n})\n","import React, {useRef, useState} from 'react'\nimport {ScrollView, StyleSheet, TouchableOpacity} from 'react-native'\nimport sortBy from 'sort-by'\nimport {DrawerScreenProps} from '@react-navigation/drawer'\nimport {Paginator, Picker, Text, TextInput, View} from '../components/Themed'\nimport ScaledImage from '../components/ScaledImage'\nimport {RootDrawerParamList} from '../navigation/types'\nimport {useSets} from '../data/sets'\nimport {themesList} from '../data/themes'\nimport {useIsLoggedIn} from '../api/brickset'\nimport TextLink from '../components/TextLink'\n\nexport default function TabsScreen({navigation}: DrawerScreenProps<RootDrawerParamList, 'Sets'>) {\n  const [sortField, setSortField] = useState('-year'),\n        [pageSize, setPageSize] = useState(25),\n        [filterBy, setFilterBy] = useState(''),\n        [theme, setTheme] = useState(''),\n        [collectionFilter, setCollectionFilter] = useState(''),\n        [currentPage, setCurrentPage] = useState(0),\n        isLoggedIn = useIsLoggedIn(),\n        scrollRef = useRef(),\n        {list} = useSets(),\n        filteredSets = list.filter(set =>\n          (!filterBy || (set.setNum + set.name).toLowerCase().match(filterBy.toLowerCase())) &&\n          (!theme || set.theme.id == theme) &&\n          (!isLoggedIn || !collectionFilter ||\n            (collectionFilter == 'owned' && set.collection.qtyOwned > 0) ||\n            (collectionFilter == 'not-owned' && set.collection.qtyOwned === 0) ||\n            (collectionFilter == 'wanted' && set.collection.wanted) ||\n            (collectionFilter == 'not-wanted' && !set.collection.wanted) ||\n            (collectionFilter == 'not-wanted-not-owned' && !set.collection.wanted && set.collection.qtyOwned === 0)\n          )\n        )\n  return (\n    <ScrollView ref={scrollRef} style={{\n      padding: 20,\n      paddingBottom: 100\n    }}>\n      <View>\n        <TextInput\n          label=\"Search Sets\"\n          onChangeText={value => {\n            setCurrentPage(0)\n            setFilterBy(value)\n          }} />\n      </View>\n      <View style={{marginVertical: 20}}>\n        <Picker\n          label=\"Theme\"\n          prompt=\"Theme\"\n          selectedValue={theme}\n          onValueChange={(theme: string) => {\n            setCurrentPage(0)\n            setTheme(theme)\n          }}>\n          <Picker.Item label=\"All themes\" value=\"\" />\n          {themesList.sort(sortBy('name')).map(theme =>\n            <Picker.Item key={theme.name} label={`${theme.name} (${theme.numSets.toLocaleString()} sets)`} value={theme.id} />\n          )}\n        </Picker>\n      </View>\n      <View style={{marginBottom: 0}}>\n        <Picker\n          label=\"Sort by\"\n          prompt=\"Sort by\"\n          selectedValue={sortField}\n          onValueChange={(field: string) => {\n            setCurrentPage(0)\n            setSortField(field)\n          }}>\n          <Picker.Item label=\"Set Number\" value=\"setNumSort\" />\n          <Picker.Item label=\"Set Number (desc)\" value=\"-setNumSort\" />\n          <Picker.Item label=\"Most Owned\" value=\"-ownedBy\" />\n          <Picker.Item label=\"Most Wanted\" value=\"-wantedBy\" />\n          <Picker.Item label=\"Name\" value=\"name\" />\n          <Picker.Item label=\"Name (desc)\" value=\"-name\" />\n          <Picker.Item label=\"Parts\" value=\"numParts\" />\n          <Picker.Item label=\"Parts (desc)\" value=\"-numParts\" />\n          <Picker.Item label=\"Retail Price\" value=\"LEGOCom.US.retailPrice\" />\n          <Picker.Item label=\"Retail Price (desc)\" value=\"-LEGOCom.US.retailPrice\" />\n          <Picker.Item label=\"Year Released\" value=\"year\" />\n          <Picker.Item label=\"Year Released (desc)\" value=\"-year\" />\n        </Picker>\n      </View>\n      {isLoggedIn\n        ? <View style={{marginVertical: 20}}>\n          <Picker\n            label=\"Collection\"\n            prompt=\"Collection\"\n            selectedValue={collectionFilter}\n            onValueChange={(value: string) => {\n              setCurrentPage(0)\n              setCollectionFilter(value)\n            }}>\n            <Picker.Item label=\"Any\" value=\"\" />\n            <Picker.Item label=\"Owned\" value=\"owned\" />\n            <Picker.Item label=\"Not owned\" value=\"not-owned\" />\n            <Picker.Item label=\"Wanted\" value=\"wanted\" />\n            <Picker.Item label=\"Not Wanted\" value=\"not-wanted\" />\n            <Picker.Item label=\"Not Wanted and Not Owned\" value=\"not-wanted-not-owned\" />\n          </Picker>\n        </View>\n        : <TextLink\n          style={{marginTop: 10, marginBottom: 20}}\n          onPress={() => navigation.navigate('Settings')}>\n          Log into Brickset to filter by sets you own.\n        </TextLink>\n      }\n      {filteredSets.length\n        ? filteredSets\n          .sort(sortBy.apply(sortBy, sortField.split(',')))\n          .slice(currentPage * pageSize, currentPage * pageSize + pageSize)\n          .map(set =>\n            <TouchableOpacity key={set.setNum} style={styles.set} onPress={() => {\n              navigation.navigate('Set', {id: set.setNum})\n            }}>\n              <ScaledImage\n                style={styles.image}\n                width={100}\n                source={{uri: set.image.imageURL}} />\n              <View>\n                <Text>{set.setNum}</Text>\n                <Text>{set.name}</Text>\n                <Text>{set.theme.name}</Text>\n                <Text>{set.numParts.toLocaleString()} parts</Text>\n                <Text>\n                  Released in {set.year}\n                  {set.LEGOCom.US.retailPrice ?\n                    ` at $${set.LEGOCom.US.retailPrice.toLocaleString()} USD`\n                    : ''\n                  }\n                </Text>\n                {sortField == '-ownedBy'\n                  ? <Text>Owned by {set.ownedBy.toLocaleString()} people on Brickset</Text>\n                  : null\n                }\n                {sortField == '-wantedBy'\n                  ? <Text>Wanted by {set.wantedBy.toLocaleString()} people on Brickset</Text>\n                  : null\n                }\n              </View>\n            </TouchableOpacity>\n          )\n        : <Text style={{textAlign: 'center'}}>\n          {list.length\n            ? 'No results match your search criteria'\n            : 'Loading sets ...'\n          }\n        </Text>\n      }\n      <View style={{height: 20}} />\n      {filteredSets.length\n        ? <Paginator\n          pageSize={pageSize}\n          numItems={filteredSets.length}\n          onPageSizeChange={setPageSize}\n          onPageChange={(val : number) => {\n            scrollRef.current?.scrollTo({y: 0, animated: true})\n            setCurrentPage(val)\n          }}\n          selectedValue={currentPage} />\n        : null\n      }\n      <View style={{height: 50}} />\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  nowrapRow: {\n    flex: 1,\n    flexDirection: 'row-reverse',\n    flexWrap: 'nowrap'\n  },\n  set: {\n    flex: 1,\n    flexDirection: 'row',\n    textAlign: 'left',\n    paddingVertical: 10,\n    paddingRight: 20,\n    flexGrow: 1\n  },\n  image: {\n    backgroundColor: 'gray',\n    marginRight: 10\n  }\n})\n","import React, {useState} from 'react'\nimport {StyleSheet, Button, ScrollView} from 'react-native'\nimport {Text, TextInput, View} from '../components/Themed'\nimport Spinner from '../components/Spinner'\nimport {useCollection, useIsLoggedIn, useLoadCollection, useLogin, useLogOut} from '../api/brickset'\nimport TextLink from '../components/TextLink'\nimport RequireAPISupport from '../components/APISupport'\n\nexport default function SettingsScreen() {\n  const [username, setUsername] = useState(''),\n        [password, setPassword] = useState(''),\n        [loadingMessage, setLoadingMessage] = useState(''),\n        collection = useCollection(),\n        login = useLogin(),\n        logOut = useLogOut(),\n        isLoggedIn = useIsLoggedIn(),\n        loadCollection = useLoadCollection()\n  return (\n    <ScrollView style={{padding: 20}}>\n      <Spinner visible={Boolean(loadingMessage)} textContent={loadingMessage} />\n      <Text style={styles.heading}>Brickset</Text>\n      <RequireAPISupport>\n        {isLoggedIn\n          ? <View>\n            <Text style={{marginBottom: 20}}>\n              Found {Object.keys(collection || {}).length.toLocaleString()} sets you have tracked on Brickset. Any changes\n              you make in this app will be automatically synced back to Brickset as long as you remain logged in.\n            </Text>\n            <View style={{marginBottom: 20}}>\n              <Button\n                title=\"Re-sync my collection from Brickset\" onPress={() => {\n                  setLoadingMessage('Syncing collection from Brickset ...')\n                  loadCollection()\n                    .then(() => setLoadingMessage(''))\n                    .catch(() => setLoadingMessage(''))\n                }}/>\n            </View>\n            <Button title=\"Log out from Brickset\" onPress={() => {\n              setLoadingMessage('Logging out from Brickset ...')\n              logOut()\n                .then(() => setLoadingMessage(''))\n                .catch(() => setLoadingMessage(''))\n            }} />\n          </View>\n          : <View>\n            <Text style={{marginBottom: 10}}>\n              Log into your{' '}\n              <TextLink url=\"https://www.brickset.com\">Brickset.com</TextLink>{' '}\n              account to access your personal data. If you don&apos;t already have one, you&apos;ll need to{' '}\n              <TextLink url=\"https://brickset.com/signup\">create an account</TextLink>.\n            </Text>\n            <TextInput label=\"username\" onChangeText={setUsername} style={{marginBottom: 10}} />\n            <TextInput label=\"password\" secureTextEntry={true} onChangeText={setPassword} style={{marginBottom: 10}} />\n            <Button title=\"Login\" onPress={() => {\n              setLoadingMessage('Logging in to Brickset ...')\n              login(username, password)\n                .then(() => {\n                  setLoadingMessage('Importing collection from Brickset ...')\n                  loadCollection()\n                    .then(() => setLoadingMessage(''))\n                    .catch(() => setLoadingMessage(''))\n                })\n                .catch(() => setLoadingMessage(''))\n            }}/>\n          </View>\n        }\n      </RequireAPISupport>\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  linkText: {\n    color: '#2e78b7'\n  },\n  heading: {\n    marginBottom: 20,\n    fontWeight: 'bold'\n  }\n})\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport {LinkingOptions} from '@react-navigation/native'\nimport * as Linking from 'expo-linking'\n\nimport {RootStackParamList} from './types'\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('https://jeromedane.github.io/')],\n  config: {\n    initialRouteName: 'Root',\n    screens: {\n      Root: {\n        initialRouteName: 'Sets',\n        path: 'brick-tools-for-lego',\n        screens: {\n          Parts: 'parts',\n          Themes: 'themes',\n          Sets: 'sets',\n          About: 'about',\n          Settings: 'settings'\n        }\n      },\n      Element: 'brick-tools-for-lego/element/:id',\n      Set: {\n        path: 'brick-tools-for-lego/set/:id',\n        screens: {\n          SetDetails: 'details',\n          SetInstructions: 'instructions',\n          SetParts: 'parts'\n        }\n      },\n      Modal: 'brick-tools-for-lego/modal',\n      NotFound: '*'\n    }\n  }\n}\n\nexport default linking\n","import {MaterialTopTabScreenProps, createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs'\nimport React, {useEffect} from 'react'\nimport SetDetailsScreen from '../screens/SetDetails'\nimport SetPartsScreen from '../screens/SetParts'\nimport SetInstructionsScreen from '../screens/SetInstructions'\nimport {useSets} from '../data/sets'\nimport {RootStackParamList} from './types'\n\nexport type SetTabsParamList = {\n  SetDetails: {id: string};\n  SetInstructions: {id: string};\n  SetParts: {id: string};\n}\n\nconst Tab = createMaterialTopTabNavigator()\n\nconst SetTabs = ({navigation: {setOptions}, route: {params: {id}}}: MaterialTopTabScreenProps<RootStackParamList, 'Set'>) => {\n  const set = useSets().byId[id]\n  useEffect(() => {\n    setOptions({title: set?.setNum.replace(/-.*$/, '') + ' ' + set?.name})\n  }, [set])\n  return <Tab.Navigator initialRouteName=\"SetDetails\">\n    <Tab.Screen\n      name=\"SetDetails\"\n      initialParams={{id}}\n      options={{title: 'Details'}}\n      component={SetDetailsScreen} />\n    <Tab.Screen\n      name=\"SetParts\"\n      initialParams={{id}}\n      options={{title: 'Parts'}}\n      component={SetPartsScreen} />\n    <Tab.Screen\n      name=\"SetInstructions\"\n      initialParams={{id}}\n      options={{title: 'Instructions'}}\n      component={SetInstructionsScreen} />\n  </Tab.Navigator>\n}\n\nexport default SetTabs\n","import {MaterialTopTabScreenProps} from '@react-navigation/material-top-tabs'\nimport React, {useEffect, useState} from 'react'\nimport Spinner from '../components/Spinner'\nimport {ScrollView, Linking, Button} from 'react-native'\nimport {Text, View, TextInput} from '../components/Themed'\nimport ScaledImage from '../components/ScaledImage'\nimport {SetTabsParamList} from '../navigation/SetTabs'\nimport {useIsLoggedIn, useSetWanted, useSetOwned} from '../api/brickset'\nimport {useSets} from '../data/sets'\nimport TextLink from '../components/TextLink'\nimport CheckBox from '../components/Checkbox'\n\nexport default function SetDetailsScreen({navigation, route: {params: {id}}}: MaterialTopTabScreenProps<SetTabsParamList, 'SetDetails'>) {\n  const set = useSets().byId[id],\n        [loadingMessage, setLoadingMessage] = useState(''),\n        isLoggedIn = useIsLoggedIn(),\n        [quantityOwned, setQuantityOwned] = useState(\n          ((isLoggedIn && set && set.collection && set.collection.qtyOwned) || 0).toString()\n        ),\n        setWanted = useSetWanted(),\n        setOwned = useSetOwned()\n  useEffect(() => {\n    if(set && set.collection)\n      setQuantityOwned(set.collection.qtyOwned.toString())\n  }, [set])\n  return set\n    ? <ScrollView style={{padding: 20}}>\n      <Spinner visible={Boolean(loadingMessage)} textContent={loadingMessage} />\n      <ScaledImage\n        width={500}\n        source={{uri: set.image.imageURL}}\n        style={{marginBottom: 20}} />\n      <View style={{marginBottom: 20}}>\n        <Text>Set number: {set.setNum}</Text>\n        <Text>Theme: {set.theme.name}</Text>\n        <Text>{set.name}</Text>\n        <Text>\n          {set.numParts.toLocaleString()} parts\n          {set.LEGOCom.US.retailPrice ?\n            ` - $${(set.LEGOCom.US.retailPrice / set.numParts).toFixed(2)} USD per part`\n            : ''\n          }\n        </Text>\n        <Text>\n          Released in {set.year}\n          {set.LEGOCom.US.retailPrice ?\n            ` at $${set.LEGOCom.US.retailPrice.toLocaleString()} USD`\n            : ''\n          }\n        </Text>\n        <Text>Owned by {set.ownedBy.toLocaleString()} people on Brickset</Text>\n        <Text>Wanted by {set.wantedBy.toLocaleString()} people on Brickset</Text>\n        {isLoggedIn\n          ? <View style={{marginTop: 20}}>\n            <Text style={{fontWeight: 'bold', marginBottom: 10}}>Collection</Text>\n            <View style={{marginBottom: 10}}>\n              <CheckBox\n                label=\"I want this set\"\n                value={set.collection.wanted}\n                onValueChange={(newValue) => {\n                  setLoadingMessage(`Saving as ${newValue ? '' : 'not '}wanted on Brickset ...`)\n                  setWanted(set, newValue)\n                    .then(() => setLoadingMessage(''))\n                    .then(() => setLoadingMessage(''))\n                }}\n              />\n            </View>\n            <View style={{marginBottom: 10}}>\n              <CheckBox\n                label=\"I own this set\"\n                value={set.collection.owned}\n                onValueChange={(newValue) => {\n                  setLoadingMessage(`Saving as ${newValue ? '' : 'not '}owned on Brickset ...`)\n                  setOwned(set, newValue ? 1 : 0)\n                    .then(() => {\n                      setQuantityOwned('1')\n                      setLoadingMessage('')\n                    })\n                    .then(() => setLoadingMessage(''))\n                }}\n              />\n            </View>\n            {set.collection.owned\n              ? <TextInput\n                label=\"How many copies do I own?\"\n                keyboardType=\"numeric\"\n                onChangeText={value => {\n                  const int = parseInt(value)\n                  if(!value) setQuantityOwned('')\n                  else if(isNaN(int)) setQuantityOwned('')\n                  else setQuantityOwned(int.toString())\n                }}\n                onBlur={() => {\n                  setLoadingMessage(`Saving as ${quantityOwned != '0' ? quantityOwned : 'not'} owned on Brickset ...`)\n                  setOwned(set, parseInt(quantityOwned))\n                    .then(() => setLoadingMessage(''))\n                    .then(() => setLoadingMessage(''))\n                }}\n                value={quantityOwned} />\n              : null\n            }\n          </View>\n          : <TextLink\n            style={{marginTop: 10}}\n            onPress={() => navigation.navigate('Settings')}>\n            Log into Brickset to track how of this set many you own.\n          </TextLink>\n        }\n      </View>\n      <View style={{marginBottom: 20}}>\n        <Button onPress={() =>\n          Linking.openURL('https://brickset.com/sets/' + set.setNum)\n        } title=\"Brickset\" />\n      </View>\n      <View style={{marginBottom: 20}}>\n        <Button onPress={() =>\n          Linking.openURL('https://rebrickable.com/sets/' + set.setNum)\n        } title=\"Rebrickable\" />\n      </View>\n    </ScrollView>\n    : <Text>Unable to find set number &quot;{id}&quot;</Text>\n}\n","import * as React from 'react'\nimport {View} from 'react-native'\nimport {Text} from './Themed'\nimport DefaultCheckBox, {CheckBoxProps as DefaultCheckBoxProps} from '@react-native-community/checkbox'\n\ninterface CheckBoxProps extends DefaultCheckBoxProps {\n  label: string\n}\n\nconst CheckBox = (props: CheckBoxProps) => {\n  return <View style={{flex: 1, flexDirection: 'row'}}>\n    <DefaultCheckBox {...props} style={[props.style, { }]}\n      tintColors={{false: '#aaa'}}\n      lineWidth={2} />\n    <Text style={{position: 'relative', top: 5}}>\n      {props.label}\n    </Text>\n  </View>\n}\n\nexport default CheckBox\n","import React, {useEffect} from 'react'\nimport {MaterialTopTabScreenProps} from '@react-navigation/material-top-tabs'\nimport {ScrollView} from 'react-native'\nimport {Text} from '../components/Themed'\nimport {SetTabsParamList} from '../navigation/SetTabs'\nimport {useSets} from '../data/sets'\nimport Inventory from '../components/Inventory'\nimport inventoryParts, {InventoryPart} from '../data/inventory-parts'\n\nexport default function SetPartsScreen({navigation, route: {params: {id}}} : MaterialTopTabScreenProps<SetTabsParamList, 'SetParts'>) {\n  const set = useSets().byId[id],\n        inventory = set && set.inventories && set.inventories[0],\n        numParts = ((inventory && inventoryParts[inventory.id]) || [])\n          .reduce((count: number, inventoryPart: InventoryPart) => count + inventoryPart.quantity, 0)\n  useEffect(() => {\n    navigation.setOptions({\n      title: `Parts (${numParts.toLocaleString()})`\n    })\n  }, [set])\n  return (\n    <ScrollView style={{padding: 20}}>\n      {inventory\n        ? <Inventory id={inventory.id} navigation={navigation} />\n        : <Text>Unable to find inventory set number &quot;{id}&quot;</Text>\n      }\n    </ScrollView>\n  )\n}\n","import React, {useState} from 'react'\nimport sortBy from 'sort-by'\nimport {Image, TouchableOpacity} from 'react-native'\nimport {Picker, Text, View} from './Themed'\nimport inventoryParts from '../data/inventory-parts'\nimport Switch from './Switch'\n\nconst Inventory = ({id, navigation: {navigate}}) => {\n  const defaultSortOrder = 'element.part.category.name,element.part.subCategory,element.part.width,element.part.length,element.part.height,element.color.sortOrder,name',\n        [sortOrder, setSortOrder] = useState(defaultSortOrder),\n        [showSpareParts, setShowSpareParts] = useState(false),\n        setInventoryParts = inventoryParts[id] || []\n  return (\n    <View>\n      <View style={{marginVertical: 10}}>\n        <Picker\n          label=\"Sort by\"\n          selectedValue={sortOrder}\n          onValueChange={setSortOrder}>\n          <Picker.Item label=\"Category, size, and color\" value={defaultSortOrder} />\n          <Picker.Item label=\"Color, category, and size\" value={'element.color.sortOrder,element.part.category.name,element.part.subCategory,element.part.width,element.part.length,element.part.height,name'} />\n          <Picker.Item label=\"Size, category, and color\" value={'element.part.width,element.part.length,element.part.height,element.part.category.name,element.part.subCategory,element.color.sortOrder,name'} />\n          <Picker.Item label=\"Size descending, category, and color\" value={'-element.part.width,-element.part.length,-element.part.height,element.part.category.name,element.part.subCategory,element.color.sortOrder,name'} />\n          <Picker.Item label=\"Size, color, and category\" value={'element.part.width,element.part.length,element.part.height,element.color.sortOrder,element.part.category.name,element.part.subCategory,name'} />\n          <Picker.Item label=\"Size descending, color, and category\" value={'-element.part.width,-element.part.length,-element.part.height,element.color.sortOrder,element.part.category.name,element.part.subCategory,name'} />\n        </Picker>\n      </View>\n      <View style={{marginBottom: 20, alignItems: 'flex-end'}}>\n        <Switch\n          label=\"Show spare parts\"\n          onValueChange={setShowSpareParts}\n          value={showSpareParts} />\n      </View>\n      {(showSpareParts ? setInventoryParts : setInventoryParts.filter(({isSpare}) => !isSpare))\n        .sort(sortBy.apply(sortBy, sortOrder.split(',')))\n        .map(({element: {id, part, color}, quantity, isSpare}, i: number) => {\n          return <TouchableOpacity key={i} style={{flex: 1, flexDirection: 'row', flexGrow: 1, marginBottom: 10}}\n            onPress={() => { navigate('Element', {id}) }}>\n            <Image\n              style={{marginRight: 10, width: 100, height: 100, backgroundColor: 'gray'}}\n              source={{uri: `https://www.lego.com/cdn/product-assets/element.img.lod5photo.192x192/${id}.jpg`}} />\n            <View>\n              <Text>Part: {part.partNum} Element: {id}</Text>\n              <Text>{part.category.name}{part.subCategory ? ', ' + part.subCategory : ''}</Text>\n              <Text>{part.name}</Text>\n              <Text>{color.name} ({color.id})</Text>\n              <Text>Qty: {quantity}{isSpare ? ' (spare part)' : ''}</Text>\n            </View>\n          </TouchableOpacity>\n        })\n      }\n    </View>\n  )\n}\n\nexport default Inventory\n","import {MaterialTopTabScreenProps} from '@react-navigation/material-top-tabs'\nimport React, {useEffect, useState} from 'react'\nimport {ScrollView, Button} from 'react-native'\nimport WebView from 'react-native-webview'\nimport {Text, View} from '../components/Themed'\nimport {SetTabsParamList} from '../navigation/SetTabs'\nimport {useSets} from '../data/sets'\nimport {useApi} from '../api/brickset'\nimport RequireAPISupport from '../components/APISupport'\n\nexport default function SetInstructionsScreen({route: {params: {id}}}: MaterialTopTabScreenProps<SetTabsParamList, 'SetDetails'>) {\n  const set = useSets().byId[id],\n        [instructions, setInstructions] = useState(null),\n        [downloadUrl, setDownloadUrl] = useState(''),\n        [error, setError] = useState(false),\n        api = useApi()\n  useEffect(() => {\n    api('getInstructions2', {setNumber: id})\n      .then(response => {\n        setInstructions(response?.instructions)\n      })\n      .catch(() => setError(true))\n  }, [set])\n  return <ScrollView style={{padding: 20}}>\n    {set\n      ? <RequireAPISupport>\n        {error\n          ? <Text>An error occured while loading instructions.</Text>\n          : null\n        }\n        {(instructions && instructions.length == 0)\n          ? <Text>No instructions found.</Text>\n          : null\n        }\n        {instructions?.map((instruction, i: number) =>\n          <View style={{marginVertical: 10}} key={i}>\n            <Button\n              disabled={instruction.URL === downloadUrl}\n              onPress={() => {\n                setDownloadUrl(instruction.URL)\n                setTimeout(() => setDownloadUrl(''), 500)\n              }}\n              title={instruction.description} />\n          </View>\n        )}\n        {downloadUrl\n          ? <WebView style={{display: 'none'}} source={{uri: downloadUrl}} />\n          : null\n        }\n      </RequireAPISupport>\n      : <Text>Unable to find set number &quot;{id}&quot;</Text>\n    }\n  </ScrollView>\n}\n"],"sourceRoot":""}
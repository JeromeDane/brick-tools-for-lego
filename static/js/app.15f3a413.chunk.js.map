{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/ModalScreen.tsx","screens/NotFoundScreen.tsx","screens/Themes.tsx","components/ScaledImage.tsx","screens/Sets.tsx","data/elements.ts","data/parts.ts","data/color-order.ts","data/colors.ts","components/Inventory.tsx","screens/Set.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","TextInput","backgroundColor","flex","flexDirection","flexGrow","position","paddingTop","label","top","left","zIndex","paddingHorizontal","fontSize","borderWidth","borderColor","borderRadius","padding","View","Picker","borderStyle","dropdownIconColor","Item","DefaultPicker","Paginator","numPages","Math","ceil","numItems","pageSize","pickerItems","i","push","key","toString","value","justifyContent","alignItems","prompt","selectedValue","onValueChange","num","onPageChange","onPageSizeChange","marginRight","TouchableOpacity","height","onPress","Icon","name","marginLeft","FontAwesome","size","ModalScreen","styles","container","title","separator","StatusBar","Platform","OS","StyleSheet","create","fontWeight","marginVertical","width","NotFoundScreen","navigation","replace","link","linkText","marginTop","paddingVertical","TabsScreen","ScrollView","themes","filter","parentId","sort","sortBy","map","id","numSets","textAlign","ScaledImage","useState","setImageWidth","setImageHeight","useEffect","DefaultImage","getSize","source","uri","w","h","newWidth","min","maxWidth","Number","POSITIVE_INFINITY","newHeight","maxHeight","navigate","sortField","setSortField","setPageSize","filterBy","setFilterBy","currentPage","setCurrentPage","scrollRef","useRef","filteredSets","sets","setNum","toLowerCase","match","ref","paddingBottom","onChangeText","marginBottom","field","length","apply","split","slice","set","image","numParts","toLocaleString","year","val","current","scrollTo","y","animated","nowrapRow","flexWrap","paddingRight","getElement","partNum","colorId","corrections","elements","sizeRegex","partsData","reduce","acc","partData","parseInt","padStart","heightParsed","isNaN","nameSort","colorsData","colorData","colorIndex","colorOrder","indexOf","isTrans","sortOrder","Inventory","defaultSortOrder","setSortOrder","parts","inventoryParts","part","partsByNumber","colors","category","partCategories","partCatId","Image","quantity","isSpare","SetScreen","getState","routes","index","viewWidth","setViewWidth","find","params","setOptions","onLayout","nativeEvent","layout","themeId","Button","Linking","openURL","inventories","inventory","linking","prefixes","config","screens","Root","path","Themes","Sets","Set","Modal","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","documentTitle","formatter","options","route","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","initialRouteName","Screen","component","BottomTabNavigator","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","tabBarActiveTintColor","SetsScreen","tabBarIcon","TabBarIcon","ThemesScreen","headerRight","Pressable","opacity","pressed","App","isLoadingComplete","React","setLoadingComplete","a","async","SplashScreen","Font","font","require","console","warn","useCachedResources","module","exports"],"mappings":"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UACZ,WAAY,UACZ,UAAW,UACX,UAAW,UACX,UAAW,UACX,UAAW,UACX,SAAU,W,+kBCNZ,IAAME,GAAY,4CAEFC,MAAyBC,QACvC,SAACC,EAA4BC,GAC3B,IAAMhG,EAAOgG,EAASnG,KAAKmE,MAAM4B,IAC7B/E,EAAQb,EAAOiG,SAASjG,EAAK,GAAGkG,SAAS,GAAKlG,EAAK,GAAGkG,SAAS,GAAKlG,EAAK,GAAKA,EAAK,IAAM,EACzFsE,EAAStE,EAAOiG,SAAUjG,EAAK,GAAGkG,SAAS,GAAKlG,EAAK,GAAGkG,SAAS,GAAKlG,EAAK,GAAKA,EAAK,IAAO,EAC5FmG,EAAeF,SAASjG,EAAOA,EAAK,GAAK,IACzCN,EAAS0G,MAAMD,GAAgB,EAAIA,EAUvC,OATAJ,EAAIC,EAASR,SAAb,SACKQ,GADL,IAEEK,SAAUL,EAASnG,KACNmB,QAAQ4E,GAAW,MACnB5E,QAAQ,WAAY,IACjCH,QACAyD,SACA5E,WAEKqG,IAET,I,UClCa,IACb,QACA,eACA,uBACA,YACA,mBACA,oBACA,aACA,QACA,QACA,MACA,WACA,oBACA,aACA,gBACA,MACA,SACA,eACA,aACA,SACA,eACA,cACA,OACA,QACA,aACA,kBACA,iBACA,aACA,aACA,OACA,SACA,OACA,YACA,SACA,eACA,cACA,sBACA,cACA,YACA,oBACA,oBACA,eACA,mBACA,qBACA,cACA,qBACA,mBACA,kBACA,kBACA,eAEA,sBACA,mBACA,UACA,cACA,kBACA,WACA,uBACA,cACA,eACA,cACA,oBACA,eACA,cACA,eACA,uBACA,wBACA,aACA,cACA,cACA,kBACA,iBACA,gBACA,cACA,aACA,aACA,QACA,eACA,SACA,cACA,0BACA,cACA,sBACA,OACA,aACA,eACA,uBACA,qBACA,SACA,mBACA,aACA,mBACA,oBACA,kBACA,wBACA,yBACA,kBACA,iBACA,cACA,eACA,cACA,sBACA,oBACA,OACA,sBACA,aACA,WACA,qBACA,YACA,aACA,qBACA,cACA,WACA,eACA,aACA,cACA,cACA,WACA,mBACA,eACA,cACA,Y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","file":"static/js/app.15f3a413.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport React from 'react';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Text as DefaultText, TouchableOpacity, View as DefaultView, TextInput as DefaultTextInput } from 'react-native';\nimport {Picker as DefaultPicker, PickerProps} from '@react-native-picker/picker'\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\ntype DefaultTextInputProps = React.ComponentProps<typeof DefaultTextInput>\ninterface TextInputProps extends DefaultTextInputProps {\n  label?: string;\n}\n\nexport function TextInput(props: TextInputProps ) {\n  const { style, ...otherProps } = props;\n  const backgroundColor = useThemeColor({}, 'background');\n  const color = useThemeColor({}, 'text')\n\n  return <View style={[{\n    flex: 1,\n    flexDirection: 'row',\n    flexGrow: 1,\n    position: 'relative',\n    paddingTop: 8\n  }, props.style]}>\n    {props.label && <Text style={{\n        position: 'absolute',\n        top: 0,\n        left: 6,\n        zIndex: 100,\n        paddingHorizontal: 4,\n        backgroundColor,\n        fontSize: 12\n      }}>\n        {props.label}\n      </Text>\n    }\n    <DefaultTextInput style={[{\n      backgroundColor,\n      borderWidth: 1,\n      borderColor: color,\n      borderRadius: 4,\n      color,\n      padding: 10,\n      flexGrow: 1\n    }, style]} {...otherProps} />\n  </View>\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n\nexport function Picker(props: PickerProps) {\n  const { style, ...otherProps } = props;\n  const backgroundColor = useThemeColor({}, 'background');\n  const color = useThemeColor({}, 'text');\n\n  return <View style={[{\n    flex: 1,\n    flexDirection: 'row',\n    flexGrow: 1,\n    position: 'relative'\n  }, props.style]}>\n    <View style={{\n      borderColor: color,\n      borderWidth: 1,\n      borderRadius: 4,\n      flexGrow: 1,\n      flexDirection: 'row'\n    }}>\n      {props.label && <Text style={{\n        position: 'absolute',\n        top: -8,\n        left: 4,\n        zIndex: 100,\n        paddingHorizontal: 4,\n        backgroundColor,\n        fontSize: 12\n      }}>\n        {props.label}\n      </Text>}\n      <DefaultPicker\n        style={{\n          color,\n          flexGrow: 1,\n          borderStyle: 'none',\n          backgroundColor,\n          padding: 10\n        }} {...otherProps}\n        dropdownIconColor={color} />\n    </View>\n  </View>\n}\n\nPicker.Item = DefaultPicker.Item\n\ntype PaginatorProps = {\n  selectedValue: number,\n  onPageChange: Function,\n  onPageSizeChange: Function,\n  numItems: number,\n  pageSize: number\n}\n\nexport const Paginator = (props: PaginatorProps) => {\n  const numPages = Math.ceil(props.numItems/props.pageSize),\n        pickerItems = []\n  for(let i = 0; i < numPages; i++)\n    pickerItems.push(\n      <Picker.Item key={i} label={(i + 1).toString()} value={i} />\n    )\n  return <View style={{\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexGrow: 1\n  }}>\n    <Picker\n      prompt=\"Show\"\n      label=\"Show\"\n      selectedValue={props.pageSize}\n      onValueChange={(num: number) => {\n        props.onPageChange(0)\n        props.onPageSizeChange(num)\n      }}\n      style={{marginRight: props.selectedValue == 0 ? 0 : 20}}>\n      <Picker.Item label=\"10 per page\" value={10} />\n      <Picker.Item label=\"25 per page\" value={25} />\n      <Picker.Item label=\"50 per page\" value={50} />\n      <Picker.Item label=\"100 per page\" value={100} />\n    </Picker>\n    {numPages > 1\n      ? <>\n        <TouchableOpacity\n          style={{height: props.selectedValue == 0 ? 0 : 'auto'}}\n          onPress={() =>\n            props.onPageChange(props.selectedValue == 0 ? 0 : props.selectedValue - 1)\n          }>\n          <Icon name=\"chevron-left\" style={{marginRight: 20}} />\n        </TouchableOpacity>\n        <Picker\n          selectedValue={props.selectedValue}\n          onValueChange={props.onPageChange}\n          label=\"Current Page\">\n          {pickerItems}\n        </Picker>\n        <TouchableOpacity\n          style={{height: props.selectedValue == numPages - 1 ? 0 : 'auto'}}\n          onPress={() =>\n            props.onPageChange(props.selectedValue + 1)\n          }>\n          <Icon name=\"chevron-right\" style={{marginLeft: 20}} />\n        </TouchableOpacity>\n      </>\n      : null\n    }\n  </View>\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nexport function Icon(props: any) {\n  const color = useThemeColor({}, 'text')\n  return <FontAwesome size={30}  {...props} style={{ color, ...props.style }}/>;\n}\n","import { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\n\nexport default function ModalScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Modal</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { Text, View } from '../components/Themed';\n\nimport { RootStackScreenProps } from '../types';\n\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React, { useEffect, useState } from 'react'\nimport { ScrollView, StyleSheet, ViewPropTypes } from 'react-native'\nimport sortBy from 'sort-by'\nimport { Text, View } from '../components/Themed'\nimport { RootTabScreenProps } from '../types'\nimport themes from '../data/themes.json'\n\nexport default function TabsScreen({ navigation }: RootTabScreenProps<'Themes'>) {\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        {themes\n          .filter(({parentId}) => !parentId)\n          .sort(sortBy('name'))\n          .map(theme =>\n            <Text key={theme.id} style={styles.theme}>\n              {theme.name} ({theme.numSets} sets)\n            </Text>\n          )\n        }\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    padding: 20\n  },\n  theme: {\n    textAlign: 'left',\n    paddingVertical: 10\n  },\n})\n","import React, {useEffect, useState} from 'react';\nimport { Image as DefaultImage } from 'react-native';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\ntype DefaultImageProps = React.ComponentProps<typeof DefaultImage>\ninterface ImageProps extends DefaultImageProps {\n  source: {uri: string},\n  maxWidth?: number,\n  maxHeight?: number\n}\n\nconst ScaledImage = (props: ImageProps) => {\n  const { style, ...otherProps } = props,\n        [width, setImageWidth] = useState(props.width || 100),\n        [height, setImageHeight] = useState(props.height || 100)\n  useEffect(() => {\n    DefaultImage.getSize(props.source.uri, (w, h) => {\n      if(props.width && !props.height) {\n        const newWidth = Math.min(props.width, props.maxWidth || Number.POSITIVE_INFINITY)\n        setImageHeight(h * (newWidth / w))\n        setImageWidth(newWidth)\n      } else if(!props.width && props.height) {\n        const newHeight = Math.min(props.height, props.maxHeight || Number.POSITIVE_INFINITY)\n        setImageHeight(newHeight)\n        setImageWidth(w * (newHeight / h))\n      }\n    })\n  }, [props.width, props.height])\n  return <DefaultImage style={[{\n    backgroundColor: Colors[useColorScheme()].background,\n    width,\n    height\n  }, style]} {...otherProps} />\n}\n\nexport default ScaledImage","import React, { useRef, useState } from 'react'\nimport { ScrollView, StyleSheet, TouchableOpacity } from 'react-native'\nimport sortBy from 'sort-by'\nimport { Paginator, Picker, Text, TextInput, View } from '../components/Themed'\nimport ScaledImage from '../components/ScaledImage'\nimport { RootTabScreenProps } from '../types'\nimport sets from '../data/sets.json'\n\nexport default function TabsScreen({ navigation: {navigate} }: RootTabScreenProps<'Sets'>) {\n  const [sortField, setSortField] = useState('-year'),\n        [pageSize, setPageSize] = useState(25),\n        [filterBy, setFilterBy] = useState(''),\n        [currentPage, setCurrentPage] = useState(0),\n        scrollRef = useRef(),\n        filteredSets = filterBy\n          ? sets.filter(({name, setNum}) => (setNum + name).toLowerCase().match(filterBy.toLowerCase()))\n          : sets\n\n  return (\n    <View style={styles.container}>\n      <ScrollView ref={scrollRef} style={{\n        padding: 20,\n        paddingBottom: 100,\n      }}>\n        <TextInput\n          label=\"Search Sets\"\n          onChangeText={value => {\n            setCurrentPage(0)\n            setFilterBy(value)\n          }} />\n        <View style={{\n          marginBottom: 20,\n          marginTop: 10\n        }}>\n          <Picker\n            label=\"Sort by\"\n            prompt=\"Sort by\"\n            selectedValue={sortField}\n            onValueChange={(field: string) => {\n              setCurrentPage(0)\n              setSortField(field)\n            }}>\n            <Picker.Item label=\"Set Number\" value=\"setNumSort\" />\n            <Picker.Item label=\"Set Number (desc)\" value=\"-setNumSort\" />\n            <Picker.Item label=\"Name\" value=\"name\" />\n            <Picker.Item label=\"Name (desc)\" value=\"-name\" />\n            <Picker.Item label=\"Parts\" value=\"numParts\" />\n            <Picker.Item label=\"Parts (desc)\" value=\"-numParts\" />\n            <Picker.Item label=\"Year Released\" value=\"year\" />\n            <Picker.Item label=\"Year Released (desc)\" value=\"-year\" />\n          </Picker>\n        </View>\n        {filteredSets.length\n          ? filteredSets\n            .sort(sortBy.apply(sortBy, sortField.split(',')))\n            .slice(currentPage * pageSize, currentPage * pageSize + pageSize)\n            .map(set =>\n              <TouchableOpacity key={set.setNum} style={styles.set} onPress={() => {\n                navigate('Set', {id: set.setNum})\n              }}>\n                <ScaledImage\n                  style={styles.image}\n                  width={100}\n                  source={{uri: `https://images.brickset.com/sets/images/${set.setNum}.jpg`}} />\n                <View>\n                  <Text>{set.setNum}</Text>\n                  <Text>{set.name}</Text>\n                  <Text>{set.numParts.toLocaleString()} parts</Text>\n                  <Text>Released in {set.year}</Text>\n                </View>\n              </TouchableOpacity>\n            )\n          : <Text style={{textAlign: 'center'}}>\n            No results match your search criteria\n          </Text>\n        }\n        <View style={{height: 20}} />\n        {filteredSets.length\n          ? <Paginator\n              pageSize={pageSize}\n              numItems={filteredSets.length}\n              onPageSizeChange={setPageSize}\n              onPageChange={(val : number) => {\n                scrollRef.current?.scrollTo({y: 0, animated: true})\n                setCurrentPage(val)\n              }}\n              selectedValue={currentPage} />\n          : null\n        }\n        <View style={{height: 50}} />\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  nowrapRow: {\n    flex: 1,\n    flexDirection: 'row-reverse',\n    flexWrap: 'nowrap'\n  },\n  set: {\n    flex: 1,\n    flexDirection: 'row',\n    textAlign: 'left',\n    paddingVertical: 10,\n    paddingRight: 20,\n    flexGrow: 1\n  },\n  image: {\n    backgroundColor: 'gray',\n    marginRight: 10\n  },\n})\n","import elements from '../data/elements-lookup.json'\n\nexport const getElement = (partNum: string, colorId: string) =>\n  corrections[partNum + '-' + colorId] || elements[partNum + '-' + colorId]\n\nconst corrections = {\n  '3005-378': '4521948', // sand green 1x1 brick\n  '3010-378': '4521947', // sand green 1x3 brick,\n  '3021-19': '4118790', // tan 2x3 plate\n  '3031-19': '4243824', // tan 4/4 plate,\n  '3031-70': '4243838', // reddish brown 4/4 plate\n  '3673-71': '4211807', // light bluish gray technic pin without friction ridges\n  '3821-4': '4537987', // red 1x3x1 door right\n  '3821-15': '4537987', // white 1x3x1 door right\n  '14769-72': '4620079', // dark bluish gray 2x2 tile round\n  '18677-70': '6192310', // reddish brown 1x2 plate-special with pin hole underneath\n  '32028-72': '4543086', // light bluish gray 1x2 plate with door grove\n  '32028-19': '4160483', // tan 1x2 plate with door grove\n  '32039-0': '6331716', // black technic axle connector with axle hole\n  '3795-71': '4211452', // light bluish gray 2x6 plate\n  '43093-1': '4206482', // blue technic axle pin with friction ridges lengthwise\n  '4536-15': '4520636', // white Cupboard 2 x 3 Drawer\n  '4740-2': '4567908', // green 2x2 dish\n}\n","import partsData from './parts.json'\n\ntype PartData = {\n  partNum: string,\n  name: string,\n  partCatId: string,\n  partMaterial: string\n}\n\nexport interface Part extends PartData {\n  nameSort: string,\n  width: number,\n  length: number,\n  height: number\n}\n\nconst sizeRegex = /(\\d+)\\s?x\\s?(\\d+)(\\s?x\\s?(\\d+)([^\\/]|$))?/\n\nexport default (partsData as PartData[]).reduce(\n  (acc: {[key: string]: Part}, partData: PartData) => {\n    const size = partData.name.match(sizeRegex),\n        width = size ? parseInt(size[1].padStart(2) < size[2].padStart(2) ? size[1] : size[2]) : 0,\n        length = size ? parseInt((size[1].padStart(2) > size[2].padStart(2) ? size[1] : size[2])) : 0,\n        heightParsed = parseInt(size ? size[4] : ''),\n        height = isNaN(heightParsed) ? 0 : heightParsed\n    acc[partData.partNum] = {\n      ...partData,\n      nameSort: partData.name\n                  .replace(sizeRegex, '  ')\n                  .replace(/with|w\\//, ''),\n      width,\n      length,\n      height\n    } as Part\n    return acc\n  },\n  {}\n)\n","// https://1.bp.blogspot.com/-aQauElTPaCg/YL_mdg37mqI/AAAAAAAAMQI/kcwwNj-Qr9EYV4HfnNnPJPtZc299246oACLcBGAsYHQ/s1600/Lego%2BColors%2Bpicture.jpg\n\nexport default [\n  \"Black\", // 0\",\n  \"Chrome Black\", // 64\",\n  \"Speckle Black-Silver\", // 132\",\n  \"Dark Gray\", // 8\",\n  \"Dark Bluish Gray\", // 72\",\n  \"Light Bluish Gray\", // 71\",\n  \"Light Gray\", // 7\",\n  \"White\", // 15\",\n  \"Brown\", // 6\",\n  \"Tan\", // 19\",\n  \"Dark Tan\", // 28\",\n  \"Medium Dark Flesh\", // 84\",\n  \"Dark Brown\", // 308\",\n  \"Reddish Brown\", // 70\",\n  \"Red\", // 4\",\n  \"Orange\", // 25\",\n  \"Light Yellow\", // 18\",\n  \"Pearl Gold\", // 297\",\n  \"Yellow\", // 14\",\n  \"Bright Green\", // 10\",\n  \"Light Green\", // 17\",\n  \"Lime\", // 27\",\n  \"Green\", // 2\",\n  \"Sand Green\", // 378\",\n  \"Light Turquoise\", // 11\",\n  \"Dark Turquoise\", // 3\",\n  \"Light Blue\", // 9\",\n  \"Dark Azure\", // 321\",\n  \"Blue\", // 1\",\n  \"Purple\", // 22\",\n  \"Pink\", // 13\",\n  \"Dark Pink\", // 5\",\n  \"Salmon\", // 12\",\n  \"Light Violet\", // 20\",\n  \"Trans-Black\", // 40\",\n  \"Trans-Black IR Lens\", // 32\",\n  \"Trans-Clear\", // 47\",\n  \"Trans-Red\", // 36\",\n  \"Trans-Neon Orange\", // 57\",\n  \"Trans-Neon Yellow\", // 54\",\n  \"Trans-Yellow\", // 46\",\n  \"Trans-Neon Green\", // 42\",\n  \"Trans-Bright Green\", // 35\",\n  \"Trans-Green\", // 34\",\n  \"Trans-Very Lt Blue\", // 43\",\n  \"Trans-Light Blue\", // 41\",\n  \"Trans-Dark Blue\", // 33\",\n  \"Trans-Dark Pink\", // 45\",\n  \"Trans-Purple\", // 52\",\n\n  \"Glow In Dark Opaque\", // 21\",\n  \"Dark Blue-Violet\", // 23\",\n  \"Magenta\", // 26\",\n  \"Bright Pink\", // 29\",\n  \"Medium Lavender\", // 30\",\n  \"Lavender\", // 31\",\n  \"Chrome Antique Brass\", // 60\",\n  \"Chrome Blue\", // 61\",\n  \"Chrome Green\", // 62\",\n  \"Chrome Pink\", // 63\",\n  \"Very Light Orange\", // 68\",\n  \"Light Purple\", // 69\",\n  \"Medium Blue\", // 73\",\n  \"Medium Green\", // 74\",\n  \"Speckle Black-Copper\", // 75\",\n  \"Speckle DBGray-Silver\", // 76\",\n  \"Light Pink\", // 77\",\n  \"Light Flesh\", // 78\",\n  \"Milky White\", // 79\",\n  \"Metallic Silver\", // 80\",\n  \"Metallic Green\", // 81\",\n  \"Metallic Gold\", // 82\",\n  \"Dark Purple\", // 85\",\n  \"Dark Flesh\", // 86\",\n  \"Royal Blue\", // 89\",\n  \"Flesh\", // 92\",\n  \"Light Salmon\", // 100\",\n  \"Violet\", // 110\",\n  \"Blue-Violet\", // 112\",\n  \"Glitter Trans-Dark Pink\", // 114\",\n  \"Medium Lime\", // 115\",\n  \"Glitter Trans-Clear\", // 117\",\n  \"Aqua\", // 118\",\n  \"Light Lime\", // 120\",\n  \"Light Orange\", // 125\",\n  \"Glitter Trans-Purple\", // 129\",\n  \"Speckle Black-Gold\", // 133\",\n  \"Copper\", // 134\",\n  \"Pearl Light Gray\", // 135\",\n  \"Metal Blue\", // 137\",\n  \"Pearl Light Gold\", // 142\",\n  \"Trans-Medium Blue\", // 143\",\n  \"Pearl Dark Gray\", // 148\",\n  \"Pearl Very Light Gray\", // 150\",\n  \"Very Light Bluish Gray\", // 151\",\n  \"Yellowish Green\", // 158\",\n  \"Flat Dark Gold\", // 178\",\n  \"Flat Silver\", // 179\",\n  \"Trans-Orange\", // 182\",\n  \"Pearl White\", // 183\",\n  \"Bright Light Orange\", // 191\",\n  \"Bright Light Blue\", // 212\",\n  \"Rust\", // 216\",\n  \"Bright Light Yellow\", // 226\",\n  \"Trans-Pink\", // 230\",\n  \"Sky Blue\", // 232\",\n  \"Trans-Light Purple\", // 236\",\n  \"Dark Blue\", // 272\",\n  \"Dark Green\", // 288\",\n  \"Glow In Dark Trans\", // 294\",\n  \"Maersk Blue\", // 313\",\n  \"Dark Red\", // 320\",\n  \"Medium Azure\", // 322\",\n  \"Light Aqua\", // 323\",\n  \"Olive Green\", // 326\",\n  \"Chrome Gold\", // 334\",\n  \"Sand Red\", // 335\",\n  \"Medium Dark Pink\", // 351\",\n  \"Earth Orange\", // 366\",\n  \"Sand Purple\", // 373\",\n  \"Sand Blue\", // 379\",\n  \"Chrome Silver\", // 383\",\n  \"Fabuland Brown\", // 450\",\n  \"Medium Orange\", // 462\",\n  \"Dark Orange\", // 484\",\n  \"Very Light Gray\", // 503\",\n  \"Glow in Dark White\", // 1000\",\n  \"Medium Violet\", // 1001\",\n  \"Glitter Trans-Neon Green\", // 1002\",\n  \"Glitter Trans-Light Blue\", // 1003\",\n  \"Trans-Flame Yellowish Orange\", // 1004\",\n  \"Trans-Fire Yellow\", // 1005\",\n  \"Trans-Light Royal Blue\", // 1006\",\n  \"Reddish Lilac\", // 1007\",\n  \"Vintage Blue\", // 1008\",\n  \"Vintage Green\", // 1009\",\n  \"Vintage Red\", // 1010\",\n  \"Vintage Yellow\", // 1011\",\n  \"Fabuland Orange\", // 1012\",\n  \"Modulex White\", // 1013\",\n  \"Modulex Light Bluish Gray\", // 1014\",\n  \"Modulex Light Gray\", // 1015\",\n  \"Modulex Charcoal Gray\", // 1016\",\n  \"Modulex Tile Gray\", // 1017\",\n  \"Modulex Black\", // 1018\",\n  \"Modulex Tile Brown\", // 1019\",\n  \"Modulex Terracotta\", // 1020\",\n  \"Modulex Brown\", // 1021\",\n  \"Modulex Buff\", // 1022\",\n  \"Modulex Red\", // 1023\",\n  \"Modulex Pink Red\", // 1024\",\n  \"Modulex Orange\", // 1025\",\n  \"Modulex Light Orange\", // 1026\",\n  \"Modulex Light Yellow\", // 1027\",\n  \"Modulex Ochre Yellow\", // 1028\",\n  \"Modulex Lemon\", // 1029\",\n  \"Modulex Pastel Green\", // 1030\",\n  \"Modulex Olive Green\", // 1031\",\n  \"Modulex Aqua Green\", // 1032\",\n  \"Modulex Teal Blue\", // 1033\",\n  \"Modulex Tile Blue\", // 1034\",\n  \"Modulex Medium Blue\", // 1035\",\n  \"Modulex Pastel Blue\", // 1036\",\n  \"Modulex Violet\", // 1037\",\n  \"Modulex Pink\", // 1038\",\n  \"Modulex Clear\", // 1039\",\n  \"Modulex Foil Dark Gray\", // 1040\",\n  \"Modulex Foil Light Gray\", // 1041\",\n  \"Modulex Foil Dark Green\", // 1042\",\n  \"Modulex Foil Light Green\", // 1043\",\n  \"Modulex Foil Dark Blue\", // 1044\",\n  \"Modulex Foil Light Blue\", // 1045\",\n  \"Modulex Foil Violet\", // 1046\",\n  \"Modulex Foil Red\", // 1047\",\n  \"Modulex Foil Yellow\", // 1048\",\n  \"Modulex Foil Orange\", // 1049\",\n  \"Coral\", // 1050\",\n  \"Pastel Blue\", // 1051\",\n  \"Glitter Trans-Orange\", // 1052\",\n  \"Trans-Blue Opal\", // 1053\",\n  \"Trans-Medium Reddish Violet Opal\", // 1054\",\n  \"Trans-Clear Opal\", // 1055\",\n  \"Trans-Brown Opal\", // 1056\",\n  \"Trans-Light Bright Green\", // 1057\",\n  \"Trans-Light Green\", // 1058\",\n  \"Trans-Purple Opal\", // 1059\",\n  \"Trans-Green Opal\", // 1060\",\n  \"Trans-Dark Blue Opal\", // 1061\",\n  \"Lemon\", // 1062\",\n  \"[No Color/Any Color]\", // 9999\"\n]","import colorsData from './colors.json'\nimport colorOrder from './color-order'\n\ntype ColorData = {\n  id: string,\n  name: string,\n  rgb: string,\n  isTrans: string\n}\n\ntype Color = {\n  id: string,\n  name: string,\n  rgb: string,\n  isTrans: boolean,\n  sortOrder: number\n}\n\nexport default (colorsData as ColorData[])\n  .reduce((acc: {[key: string]: Color}, colorData) => {\n    const colorIndex = colorOrder.indexOf(colorData.name)\n    return Object.assign(acc, {[colorData.id]:\n      {\n        ...colorData,\n        isTrans: colorData.isTrans == 't',\n        sortOrder: colorIndex > -1 ? colorIndex : Number.POSITIVE_INFINITY\n      } as Color\n    })\n  },\n  {}\n)","import React, {useState} from 'react'\nimport sortBy from 'sort-by'\nimport { Image } from 'react-native'\nimport { Picker, Text, View } from './Themed'\nimport inventoryParts from '../data/inventory_parts.json'\nimport {getElement} from '../data/elements'\nimport partsByNumber from '../data/parts'\nimport colors from '../data/colors'\nimport partCategories from'../data/part_categories-by-id.json'\n\nconst Inventory = ({id}: {id: string, setNum: string}) => {\n  const defaultSortOrder = 'category.name,width,length,height,nameSort,color.sortOrder',\n        [sortOrder, setSortOrder] = useState(defaultSortOrder),\n        parts = inventoryParts[id]?.map((part: any) => {\n          return Object.assign(part, partsByNumber[part.partNum], {\n            color: colors[part.colorId],\n            category: partCategories[partsByNumber[part.partNum].partCatId]\n          })\n        })\n  return (\n    <View>\n      <View style={{\n          marginBottom: 20,\n          marginTop: 10\n        }}>\n        <Picker\n          label=\"Sort by\"\n          selectedValue={sortOrder}\n          onValueChange={setSortOrder}>\n          <Picker.Item label=\"Category, size, and color\" value={defaultSortOrder} />\n          <Picker.Item label=\"Color, category, and size\" value={'color.sortOrder,category.name,width,length,height,nameSort'} />\n          <Picker.Item label=\"Size, category, and color\" value={'width,length,height,category.name,nameSort,color.sortOrder'} />\n          <Picker.Item label=\"Size descending, category, and color\" value={'-width,-length,-height,category.name,nameSort,color.sortOrder'} />\n          <Picker.Item label=\"Size, color, and category\" value={'width,length,height,color.sortOrder,nameSort,category.name'} />\n          <Picker.Item label=\"Size descending, color, and category\" value={'-width,-length,-height,color.sortOrder,nameSort,category.name'} />\n        </Picker>\n      </View>\n      {parts\n        ?.sort(sortBy.apply(sortBy, sortOrder.split(',')))\n        .map((part: any, i: number) =>\n          <View key={i} style={{flex: 1, flexDirection: 'row', marginBottom: 10}}>\n            <Image\n              style={{marginRight: 10, width: 100, height: 100, backgroundColor: 'gray'}}\n              source={{uri: `https://www.lego.com/cdn/product-assets/element.img.lod5photo.192x192/${getElement(part.partNum, part.colorId)}.jpg`}} />\n            <View>\n              <Text>Part: {part.partNum} Element: {getElement(part.partNum, part.colorId)}</Text>\n              <Text>Category: {part.category.name}</Text>\n              <Text>Name: {part.name}</Text>\n              <Text>Color: {part.color.name} ({part.colorId})</Text>\n              <Text>Quantity: {part.quantity}</Text>\n              <Text>{part.isSpare ? 'Spare part' : ''}</Text>\n            </View>\n          </View>\n        )\n      }\n    </View>\n  )\n}\n\nexport default Inventory","import React, { useEffect, useState } from 'react';\nimport { ScrollView, Linking, Button } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport ScaledImage from '../components/ScaledImage'\nimport { RootTabScreenProps } from '../types'\nimport sets from '../data/sets.json'\nimport themes from '../data/themes-by-id.json'\nimport Inventory from '../components/Inventory'\n\nexport default function SetScreen({ navigation }: RootTabScreenProps<'Set'>) {\n  const {routes, index} = navigation.getState(),\n        [viewWidth, setViewWidth] = useState(0),\n        set = sets.find(set => set.setNum === routes[index].params.id)\n  useEffect(() => {\n    navigation.setOptions({title: set.setNum + ' ' + set.name})\n  }, [set])\n  return (\n    <View>\n      <ScrollView style={{padding: 20}}\n        onLayout={({nativeEvent}) =>\n          setViewWidth(nativeEvent.layout.width - 40)\n        }>\n        <ScaledImage\n          width={viewWidth}\n          maxWidth={500}\n          source={{uri: `https://images.brickset.com/sets/images/${set.setNum}.jpg`}}\n          style={{marginBottom: 20}} />\n        <View style={{marginBottom: 20}}>\n          <Text>Set number: {set.setNum}</Text>\n          <Text>Theme: {themes[set.themeId].name}</Text>\n          <Text>{set.name}</Text>\n          <Text>{set.numParts.toLocaleString()} parts</Text>\n          <Text>Released in {set.year}</Text>\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Button onPress={() =>\n            Linking.openURL('https://brickset.com/sets/' + set.setNum)\n          } title=\"Brickset\" />\n        </View>\n        <View style={{marginBottom: 20}}>\n          <Button onPress={() =>\n            Linking.openURL('https://rebrickable.com/sets/' + set.setNum)\n          } title=\"Rebrickable\" />\n        </View>\n        {set.inventories?.map((inventory: any) =>\n          <Inventory id={inventory.id} key={inventory.id} />\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('https://jeromedane.github.io/')],\n  config: {\n    screens: {\n      Root: {\n        path: 'brick-tools-for-lego',\n        screens: {\n          Themes: 'themes',\n          Sets: 'sets',\n        },\n      },\n      Set: 'brick-tools-for-lego/set/:id',\n      Modal: 'brick-tools-for-lego/modal',\n      NotFound: '*',\n    },\n  },\n};\n\nexport default linking;\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ThemesScreen from '../screens/Themes';\nimport SetsScreen from '../screens/Sets';\nimport SetScreen from '../screens/Set';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ?? route?.name} - Brick Tools for Lego`,\n      }}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator initialRouteName=\"Root\">\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Set\" component={SetScreen} options={{ }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Sets\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Sets\"\n        component={SetsScreen}\n        options={{\n          title: 'Sets',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"cubes\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Themes\"\n        component={ThemesScreen}\n        options={({navigation}: RootTabScreenProps<'Themes'>) => ({\n          title: 'Themes',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"picture-o\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nrequire('intl')\nrequire('intl/locale-data/jsonp/en.js')\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}